"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunksample_app"] = self["webpackChunksample_app"] || []).push([["vendors-node_modules_msw_lib_browser_index_mjs-node_modules_msw_lib_core_HttpResponse_mjs-nod-8fd840"],{

/***/ "./node_modules/msw/node_modules/path-to-regexp/dist.es2015/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/msw/node_modules/path-to-regexp/dist.es2015/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compile: () => (/* binding */ compile),\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   pathToRegexp: () => (/* binding */ pathToRegexp),\n/* harmony export */   regexpToFunction: () => (/* binding */ regexpToFunction),\n/* harmony export */   tokensToFunction: () => (/* binding */ tokensToFunction),\n/* harmony export */   tokensToRegexp: () => (/* binding */ tokensToRegexp)\n/* harmony export */ });\n/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n    var tokens = [];\n    var i = 0;\n    while (i < str.length) {\n        var char = str[i];\n        if (char === \"*\" || char === \"+\" || char === \"?\") {\n            tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"\\\\\") {\n            tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n            continue;\n        }\n        if (char === \"{\") {\n            tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"}\") {\n            tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \":\") {\n            var name = \"\";\n            var j = i + 1;\n            while (j < str.length) {\n                var code = str.charCodeAt(j);\n                if (\n                // `0-9`\n                (code >= 48 && code <= 57) ||\n                    // `A-Z`\n                    (code >= 65 && code <= 90) ||\n                    // `a-z`\n                    (code >= 97 && code <= 122) ||\n                    // `_`\n                    code === 95) {\n                    name += str[j++];\n                    continue;\n                }\n                break;\n            }\n            if (!name)\n                throw new TypeError(\"Missing parameter name at \".concat(i));\n            tokens.push({ type: \"NAME\", index: i, value: name });\n            i = j;\n            continue;\n        }\n        if (char === \"(\") {\n            var count = 1;\n            var pattern = \"\";\n            var j = i + 1;\n            if (str[j] === \"?\") {\n                throw new TypeError(\"Pattern cannot start with \\\"?\\\" at \".concat(j));\n            }\n            while (j < str.length) {\n                if (str[j] === \"\\\\\") {\n                    pattern += str[j++] + str[j++];\n                    continue;\n                }\n                if (str[j] === \")\") {\n                    count--;\n                    if (count === 0) {\n                        j++;\n                        break;\n                    }\n                }\n                else if (str[j] === \"(\") {\n                    count++;\n                    if (str[j + 1] !== \"?\") {\n                        throw new TypeError(\"Capturing groups are not allowed at \".concat(j));\n                    }\n                }\n                pattern += str[j++];\n            }\n            if (count)\n                throw new TypeError(\"Unbalanced pattern at \".concat(i));\n            if (!pattern)\n                throw new TypeError(\"Missing pattern at \".concat(i));\n            tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n            i = j;\n            continue;\n        }\n        tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n    }\n    tokens.push({ type: \"END\", index: i, value: \"\" });\n    return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */\nfunction parse(str, options) {\n    if (options === void 0) { options = {}; }\n    var tokens = lexer(str);\n    var _a = options.prefixes, prefixes = _a === void 0 ? \"./\" : _a;\n    var defaultPattern = \"[^\".concat(escapeString(options.delimiter || \"/#?\"), \"]+?\");\n    var result = [];\n    var key = 0;\n    var i = 0;\n    var path = \"\";\n    var tryConsume = function (type) {\n        if (i < tokens.length && tokens[i].type === type)\n            return tokens[i++].value;\n    };\n    var mustConsume = function (type) {\n        var value = tryConsume(type);\n        if (value !== undefined)\n            return value;\n        var _a = tokens[i], nextType = _a.type, index = _a.index;\n        throw new TypeError(\"Unexpected \".concat(nextType, \" at \").concat(index, \", expected \").concat(type));\n    };\n    var consumeText = function () {\n        var result = \"\";\n        var value;\n        while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n            result += value;\n        }\n        return result;\n    };\n    while (i < tokens.length) {\n        var char = tryConsume(\"CHAR\");\n        var name = tryConsume(\"NAME\");\n        var pattern = tryConsume(\"PATTERN\");\n        if (name || pattern) {\n            var prefix = char || \"\";\n            if (prefixes.indexOf(prefix) === -1) {\n                path += prefix;\n                prefix = \"\";\n            }\n            if (path) {\n                result.push(path);\n                path = \"\";\n            }\n            result.push({\n                name: name || key++,\n                prefix: prefix,\n                suffix: \"\",\n                pattern: pattern || defaultPattern,\n                modifier: tryConsume(\"MODIFIER\") || \"\",\n            });\n            continue;\n        }\n        var value = char || tryConsume(\"ESCAPED_CHAR\");\n        if (value) {\n            path += value;\n            continue;\n        }\n        if (path) {\n            result.push(path);\n            path = \"\";\n        }\n        var open = tryConsume(\"OPEN\");\n        if (open) {\n            var prefix = consumeText();\n            var name_1 = tryConsume(\"NAME\") || \"\";\n            var pattern_1 = tryConsume(\"PATTERN\") || \"\";\n            var suffix = consumeText();\n            mustConsume(\"CLOSE\");\n            result.push({\n                name: name_1 || (pattern_1 ? key++ : \"\"),\n                pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,\n                prefix: prefix,\n                suffix: suffix,\n                modifier: tryConsume(\"MODIFIER\") || \"\",\n            });\n            continue;\n        }\n        mustConsume(\"END\");\n    }\n    return result;\n}\n/**\n * Compile a string to a template function for the path.\n */\nfunction compile(str, options) {\n    return tokensToFunction(parse(str, options), options);\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction(tokens, options) {\n    if (options === void 0) { options = {}; }\n    var reFlags = flags(options);\n    var _a = options.encode, encode = _a === void 0 ? function (x) { return x; } : _a, _b = options.validate, validate = _b === void 0 ? true : _b;\n    // Compile all the tokens into regexps.\n    var matches = tokens.map(function (token) {\n        if (typeof token === \"object\") {\n            return new RegExp(\"^(?:\".concat(token.pattern, \")$\"), reFlags);\n        }\n    });\n    return function (data) {\n        var path = \"\";\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (typeof token === \"string\") {\n                path += token;\n                continue;\n            }\n            var value = data ? data[token.name] : undefined;\n            var optional = token.modifier === \"?\" || token.modifier === \"*\";\n            var repeat = token.modifier === \"*\" || token.modifier === \"+\";\n            if (Array.isArray(value)) {\n                if (!repeat) {\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not repeat, but got an array\"));\n                }\n                if (value.length === 0) {\n                    if (optional)\n                        continue;\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to not be empty\"));\n                }\n                for (var j = 0; j < value.length; j++) {\n                    var segment = encode(value[j], token);\n                    if (validate && !matches[i].test(segment)) {\n                        throw new TypeError(\"Expected all \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n                    }\n                    path += token.prefix + segment + token.suffix;\n                }\n                continue;\n            }\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                var segment = encode(String(value), token);\n                if (validate && !matches[i].test(segment)) {\n                    throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to match \\\"\").concat(token.pattern, \"\\\", but got \\\"\").concat(segment, \"\\\"\"));\n                }\n                path += token.prefix + segment + token.suffix;\n                continue;\n            }\n            if (optional)\n                continue;\n            var typeOfMessage = repeat ? \"an array\" : \"a string\";\n            throw new TypeError(\"Expected \\\"\".concat(token.name, \"\\\" to be \").concat(typeOfMessage));\n        }\n        return path;\n    };\n}\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nfunction match(str, options) {\n    var keys = [];\n    var re = pathToRegexp(str, keys, options);\n    return regexpToFunction(re, keys, options);\n}\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nfunction regexpToFunction(re, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.decode, decode = _a === void 0 ? function (x) { return x; } : _a;\n    return function (pathname) {\n        var m = re.exec(pathname);\n        if (!m)\n            return false;\n        var path = m[0], index = m.index;\n        var params = Object.create(null);\n        var _loop_1 = function (i) {\n            if (m[i] === undefined)\n                return \"continue\";\n            var key = keys[i - 1];\n            if (key.modifier === \"*\" || key.modifier === \"+\") {\n                params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {\n                    return decode(value, key);\n                });\n            }\n            else {\n                params[key.name] = decode(m[i], key);\n            }\n        };\n        for (var i = 1; i < m.length; i++) {\n            _loop_1(i);\n        }\n        return { path: path, index: index, params: params };\n    };\n}\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str) {\n    return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options) {\n    return options && options.sensitive ? \"\" : \"i\";\n}\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path, keys) {\n    if (!keys)\n        return path;\n    var groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n    var index = 0;\n    var execResult = groupsRegex.exec(path.source);\n    while (execResult) {\n        keys.push({\n            // Use parenthesized substring match if available, index otherwise\n            name: execResult[1] || index++,\n            prefix: \"\",\n            suffix: \"\",\n            modifier: \"\",\n            pattern: \"\",\n        });\n        execResult = groupsRegex.exec(path.source);\n    }\n    return path;\n}\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(paths, keys, options) {\n    var parts = paths.map(function (path) { return pathToRegexp(path, keys, options).source; });\n    return new RegExp(\"(?:\".concat(parts.join(\"|\"), \")\"), flags(options));\n}\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(path, keys, options) {\n    return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nfunction tokensToRegexp(tokens, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function (x) { return x; } : _d, _e = options.delimiter, delimiter = _e === void 0 ? \"/#?\" : _e, _f = options.endsWith, endsWith = _f === void 0 ? \"\" : _f;\n    var endsWithRe = \"[\".concat(escapeString(endsWith), \"]|$\");\n    var delimiterRe = \"[\".concat(escapeString(delimiter), \"]\");\n    var route = start ? \"^\" : \"\";\n    // Iterate over the tokens and create our regexp string.\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        if (typeof token === \"string\") {\n            route += escapeString(encode(token));\n        }\n        else {\n            var prefix = escapeString(encode(token.prefix));\n            var suffix = escapeString(encode(token.suffix));\n            if (token.pattern) {\n                if (keys)\n                    keys.push(token);\n                if (prefix || suffix) {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        var mod = token.modifier === \"*\" ? \"?\" : \"\";\n                        route += \"(?:\".concat(prefix, \"((?:\").concat(token.pattern, \")(?:\").concat(suffix).concat(prefix, \"(?:\").concat(token.pattern, \"))*)\").concat(suffix, \")\").concat(mod);\n                    }\n                    else {\n                        route += \"(?:\".concat(prefix, \"(\").concat(token.pattern, \")\").concat(suffix, \")\").concat(token.modifier);\n                    }\n                }\n                else {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        route += \"((?:\".concat(token.pattern, \")\").concat(token.modifier, \")\");\n                    }\n                    else {\n                        route += \"(\".concat(token.pattern, \")\").concat(token.modifier);\n                    }\n                }\n            }\n            else {\n                route += \"(?:\".concat(prefix).concat(suffix, \")\").concat(token.modifier);\n            }\n        }\n    }\n    if (end) {\n        if (!strict)\n            route += \"\".concat(delimiterRe, \"?\");\n        route += !options.endsWith ? \"$\" : \"(?=\".concat(endsWithRe, \")\");\n    }\n    else {\n        var endToken = tokens[tokens.length - 1];\n        var isEndDelimited = typeof endToken === \"string\"\n            ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n            : endToken === undefined;\n        if (!strict) {\n            route += \"(?:\".concat(delimiterRe, \"(?=\").concat(endsWithRe, \"))?\");\n        }\n        if (!isEndDelimited) {\n            route += \"(?=\".concat(delimiterRe, \"|\").concat(endsWithRe, \")\");\n        }\n    }\n    return new RegExp(route, flags(options));\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nfunction pathToRegexp(path, keys, options) {\n    if (path instanceof RegExp)\n        return regexpToRegexp(path, keys);\n    if (Array.isArray(path))\n        return arrayToRegexp(path, keys, options);\n    return stringToRegexp(path, keys, options);\n}\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/node_modules/path-to-regexp/dist.es2015/index.js?");

/***/ }),

/***/ "./node_modules/@bundled-es-modules/cookie/index-esm.js":
/*!**************************************************************!*\
  !*** ./node_modules/@bundled-es-modules/cookie/index-esm.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ source_default)\n/* harmony export */ });\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/cookie/index.js\nvar require_cookie = __commonJS({\n  \"node_modules/cookie/index.js\"(exports) {\n    \"use strict\";\n    exports.parse = parse;\n    exports.serialize = serialize;\n    var __toString = Object.prototype.toString;\n    var fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n    function parse(str, options) {\n      if (typeof str !== \"string\") {\n        throw new TypeError(\"argument str must be a string\");\n      }\n      var obj = {};\n      var opt = options || {};\n      var dec = opt.decode || decode;\n      var index = 0;\n      while (index < str.length) {\n        var eqIdx = str.indexOf(\"=\", index);\n        if (eqIdx === -1) {\n          break;\n        }\n        var endIdx = str.indexOf(\";\", index);\n        if (endIdx === -1) {\n          endIdx = str.length;\n        } else if (endIdx < eqIdx) {\n          index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n          continue;\n        }\n        var key = str.slice(index, eqIdx).trim();\n        if (void 0 === obj[key]) {\n          var val = str.slice(eqIdx + 1, endIdx).trim();\n          if (val.charCodeAt(0) === 34) {\n            val = val.slice(1, -1);\n          }\n          obj[key] = tryDecode(val, dec);\n        }\n        index = endIdx + 1;\n      }\n      return obj;\n    }\n    function serialize(name, val, options) {\n      var opt = options || {};\n      var enc = opt.encode || encode;\n      if (typeof enc !== \"function\") {\n        throw new TypeError(\"option encode is invalid\");\n      }\n      if (!fieldContentRegExp.test(name)) {\n        throw new TypeError(\"argument name is invalid\");\n      }\n      var value = enc(val);\n      if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError(\"argument val is invalid\");\n      }\n      var str = name + \"=\" + value;\n      if (null != opt.maxAge) {\n        var maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n          throw new TypeError(\"option maxAge is invalid\");\n        }\n        str += \"; Max-Age=\" + Math.floor(maxAge);\n      }\n      if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n          throw new TypeError(\"option domain is invalid\");\n        }\n        str += \"; Domain=\" + opt.domain;\n      }\n      if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n          throw new TypeError(\"option path is invalid\");\n        }\n        str += \"; Path=\" + opt.path;\n      }\n      if (opt.expires) {\n        var expires = opt.expires;\n        if (!isDate(expires) || isNaN(expires.valueOf())) {\n          throw new TypeError(\"option expires is invalid\");\n        }\n        str += \"; Expires=\" + expires.toUTCString();\n      }\n      if (opt.httpOnly) {\n        str += \"; HttpOnly\";\n      }\n      if (opt.secure) {\n        str += \"; Secure\";\n      }\n      if (opt.priority) {\n        var priority = typeof opt.priority === \"string\" ? opt.priority.toLowerCase() : opt.priority;\n        switch (priority) {\n          case \"low\":\n            str += \"; Priority=Low\";\n            break;\n          case \"medium\":\n            str += \"; Priority=Medium\";\n            break;\n          case \"high\":\n            str += \"; Priority=High\";\n            break;\n          default:\n            throw new TypeError(\"option priority is invalid\");\n        }\n      }\n      if (opt.sameSite) {\n        var sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch (sameSite) {\n          case true:\n            str += \"; SameSite=Strict\";\n            break;\n          case \"lax\":\n            str += \"; SameSite=Lax\";\n            break;\n          case \"strict\":\n            str += \"; SameSite=Strict\";\n            break;\n          case \"none\":\n            str += \"; SameSite=None\";\n            break;\n          default:\n            throw new TypeError(\"option sameSite is invalid\");\n        }\n      }\n      return str;\n    }\n    function decode(str) {\n      return str.indexOf(\"%\") !== -1 ? decodeURIComponent(str) : str;\n    }\n    function encode(val) {\n      return encodeURIComponent(val);\n    }\n    function isDate(val) {\n      return __toString.call(val) === \"[object Date]\" || val instanceof Date;\n    }\n    function tryDecode(str, decode2) {\n      try {\n        return decode2(str);\n      } catch (e) {\n        return str;\n      }\n    }\n  }\n});\n\n// source.js\nvar import_cookie = __toESM(require_cookie(), 1);\nvar source_default = import_cookie.default;\n\n/*! Bundled license information:\n\ncookie/index.js:\n  (*!\n   * cookie\n   * Copyright(c) 2012-2014 Roman Shtylman\n   * Copyright(c) 2015 Douglas Christopher Wilson\n   * MIT Licensed\n   *)\n*/\n\n\n//# sourceURL=webpack://sample-app/./node_modules/@bundled-es-modules/cookie/index-esm.js?");

/***/ }),

/***/ "./node_modules/@bundled-es-modules/statuses/index-esm.js":
/*!****************************************************************!*\
  !*** ./node_modules/@bundled-es-modules/statuses/index-esm.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ source_default)\n/* harmony export */ });\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/statuses/codes.json\nvar require_codes = __commonJS({\n  \"node_modules/statuses/codes.json\"(exports, module) {\n    module.exports = {\n      \"100\": \"Continue\",\n      \"101\": \"Switching Protocols\",\n      \"102\": \"Processing\",\n      \"103\": \"Early Hints\",\n      \"200\": \"OK\",\n      \"201\": \"Created\",\n      \"202\": \"Accepted\",\n      \"203\": \"Non-Authoritative Information\",\n      \"204\": \"No Content\",\n      \"205\": \"Reset Content\",\n      \"206\": \"Partial Content\",\n      \"207\": \"Multi-Status\",\n      \"208\": \"Already Reported\",\n      \"226\": \"IM Used\",\n      \"300\": \"Multiple Choices\",\n      \"301\": \"Moved Permanently\",\n      \"302\": \"Found\",\n      \"303\": \"See Other\",\n      \"304\": \"Not Modified\",\n      \"305\": \"Use Proxy\",\n      \"307\": \"Temporary Redirect\",\n      \"308\": \"Permanent Redirect\",\n      \"400\": \"Bad Request\",\n      \"401\": \"Unauthorized\",\n      \"402\": \"Payment Required\",\n      \"403\": \"Forbidden\",\n      \"404\": \"Not Found\",\n      \"405\": \"Method Not Allowed\",\n      \"406\": \"Not Acceptable\",\n      \"407\": \"Proxy Authentication Required\",\n      \"408\": \"Request Timeout\",\n      \"409\": \"Conflict\",\n      \"410\": \"Gone\",\n      \"411\": \"Length Required\",\n      \"412\": \"Precondition Failed\",\n      \"413\": \"Payload Too Large\",\n      \"414\": \"URI Too Long\",\n      \"415\": \"Unsupported Media Type\",\n      \"416\": \"Range Not Satisfiable\",\n      \"417\": \"Expectation Failed\",\n      \"418\": \"I'm a Teapot\",\n      \"421\": \"Misdirected Request\",\n      \"422\": \"Unprocessable Entity\",\n      \"423\": \"Locked\",\n      \"424\": \"Failed Dependency\",\n      \"425\": \"Too Early\",\n      \"426\": \"Upgrade Required\",\n      \"428\": \"Precondition Required\",\n      \"429\": \"Too Many Requests\",\n      \"431\": \"Request Header Fields Too Large\",\n      \"451\": \"Unavailable For Legal Reasons\",\n      \"500\": \"Internal Server Error\",\n      \"501\": \"Not Implemented\",\n      \"502\": \"Bad Gateway\",\n      \"503\": \"Service Unavailable\",\n      \"504\": \"Gateway Timeout\",\n      \"505\": \"HTTP Version Not Supported\",\n      \"506\": \"Variant Also Negotiates\",\n      \"507\": \"Insufficient Storage\",\n      \"508\": \"Loop Detected\",\n      \"509\": \"Bandwidth Limit Exceeded\",\n      \"510\": \"Not Extended\",\n      \"511\": \"Network Authentication Required\"\n    };\n  }\n});\n\n// node_modules/statuses/index.js\nvar require_statuses = __commonJS({\n  \"node_modules/statuses/index.js\"(exports, module) {\n    \"use strict\";\n    var codes = require_codes();\n    module.exports = status2;\n    status2.message = codes;\n    status2.code = createMessageToStatusCodeMap(codes);\n    status2.codes = createStatusCodeList(codes);\n    status2.redirect = {\n      300: true,\n      301: true,\n      302: true,\n      303: true,\n      305: true,\n      307: true,\n      308: true\n    };\n    status2.empty = {\n      204: true,\n      205: true,\n      304: true\n    };\n    status2.retry = {\n      502: true,\n      503: true,\n      504: true\n    };\n    function createMessageToStatusCodeMap(codes2) {\n      var map = {};\n      Object.keys(codes2).forEach(function forEachCode(code) {\n        var message = codes2[code];\n        var status3 = Number(code);\n        map[message.toLowerCase()] = status3;\n      });\n      return map;\n    }\n    function createStatusCodeList(codes2) {\n      return Object.keys(codes2).map(function mapCode(code) {\n        return Number(code);\n      });\n    }\n    function getStatusCode(message) {\n      var msg = message.toLowerCase();\n      if (!Object.prototype.hasOwnProperty.call(status2.code, msg)) {\n        throw new Error('invalid status message: \"' + message + '\"');\n      }\n      return status2.code[msg];\n    }\n    function getStatusMessage(code) {\n      if (!Object.prototype.hasOwnProperty.call(status2.message, code)) {\n        throw new Error(\"invalid status code: \" + code);\n      }\n      return status2.message[code];\n    }\n    function status2(code) {\n      if (typeof code === \"number\") {\n        return getStatusMessage(code);\n      }\n      if (typeof code !== \"string\") {\n        throw new TypeError(\"code must be a number or string\");\n      }\n      var n = parseInt(code, 10);\n      if (!isNaN(n)) {\n        return getStatusMessage(n);\n      }\n      return getStatusCode(code);\n    }\n  }\n});\n\n// source.js\nvar import_statuses = __toESM(require_statuses(), 1);\nvar source_default = import_statuses.default;\n\n/*! Bundled license information:\n\nstatuses/index.js:\n  (*!\n   * statuses\n   * Copyright(c) 2014 Jonathan Ong\n   * Copyright(c) 2016 Douglas Christopher Wilson\n   * MIT Licensed\n   *)\n*/\n\n\n//# sourceURL=webpack://sample-app/./node_modules/@bundled-es-modules/statuses/index-esm.js?");

/***/ }),

/***/ "./node_modules/@mswjs/cookies/lib/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@mswjs/cookies/lib/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PERSISTENCY_KEY: () => (/* binding */ PERSISTENCY_KEY),\n/* harmony export */   store: () => (/* binding */ store)\n/* harmony export */ });\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/set-cookie-parser/lib/set-cookie.js\nvar require_set_cookie = __commonJS({\n  \"node_modules/set-cookie-parser/lib/set-cookie.js\"(exports, module) {\n    \"use strict\";\n    var defaultParseOptions = {\n      decodeValues: true,\n      map: false,\n      silent: false\n    };\n    function isNonEmptyString(str) {\n      return typeof str === \"string\" && !!str.trim();\n    }\n    function parseString(setCookieValue, options) {\n      var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n      var nameValuePairStr = parts.shift();\n      var parsed = parseNameValuePair(nameValuePairStr);\n      var name = parsed.name;\n      var value = parsed.value;\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      try {\n        value = options.decodeValues ? decodeURIComponent(value) : value;\n      } catch (e) {\n        console.error(\n          \"set-cookie-parser encountered an error while decoding a cookie with value '\" + value + \"'. Set options.decodeValues to false to disable this feature.\",\n          e\n        );\n      }\n      var cookie = {\n        name,\n        value\n      };\n      parts.forEach(function(part) {\n        var sides = part.split(\"=\");\n        var key = sides.shift().trimLeft().toLowerCase();\n        var value2 = sides.join(\"=\");\n        if (key === \"expires\") {\n          cookie.expires = new Date(value2);\n        } else if (key === \"max-age\") {\n          cookie.maxAge = parseInt(value2, 10);\n        } else if (key === \"secure\") {\n          cookie.secure = true;\n        } else if (key === \"httponly\") {\n          cookie.httpOnly = true;\n        } else if (key === \"samesite\") {\n          cookie.sameSite = value2;\n        } else {\n          cookie[key] = value2;\n        }\n      });\n      return cookie;\n    }\n    function parseNameValuePair(nameValuePairStr) {\n      var name = \"\";\n      var value = \"\";\n      var nameValueArr = nameValuePairStr.split(\"=\");\n      if (nameValueArr.length > 1) {\n        name = nameValueArr.shift();\n        value = nameValueArr.join(\"=\");\n      } else {\n        value = nameValuePairStr;\n      }\n      return { name, value };\n    }\n    function parse(input, options) {\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      if (!input) {\n        if (!options.map) {\n          return [];\n        } else {\n          return {};\n        }\n      }\n      if (input.headers) {\n        if (typeof input.headers.getSetCookie === \"function\") {\n          input = input.headers.getSetCookie();\n        } else if (input.headers[\"set-cookie\"]) {\n          input = input.headers[\"set-cookie\"];\n        } else {\n          var sch = input.headers[Object.keys(input.headers).find(function(key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })];\n          if (!sch && input.headers.cookie && !options.silent) {\n            console.warn(\n              \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n            );\n          }\n          input = sch;\n        }\n      }\n      if (!Array.isArray(input)) {\n        input = [input];\n      }\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      if (!options.map) {\n        return input.filter(isNonEmptyString).map(function(str) {\n          return parseString(str, options);\n        });\n      } else {\n        var cookies = {};\n        return input.filter(isNonEmptyString).reduce(function(cookies2, str) {\n          var cookie = parseString(str, options);\n          cookies2[cookie.name] = cookie;\n          return cookies2;\n        }, cookies);\n      }\n    }\n    function splitCookiesString(cookiesString) {\n      if (Array.isArray(cookiesString)) {\n        return cookiesString;\n      }\n      if (typeof cookiesString !== \"string\") {\n        return [];\n      }\n      var cookiesStrings = [];\n      var pos = 0;\n      var start;\n      var ch;\n      var lastComma;\n      var nextStart;\n      var cookiesSeparatorFound;\n      function skipWhitespace() {\n        while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n          pos += 1;\n        }\n        return pos < cookiesString.length;\n      }\n      function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n      }\n      while (pos < cookiesString.length) {\n        start = pos;\n        cookiesSeparatorFound = false;\n        while (skipWhitespace()) {\n          ch = cookiesString.charAt(pos);\n          if (ch === \",\") {\n            lastComma = pos;\n            pos += 1;\n            skipWhitespace();\n            nextStart = pos;\n            while (pos < cookiesString.length && notSpecialChar()) {\n              pos += 1;\n            }\n            if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n              cookiesSeparatorFound = true;\n              pos = nextStart;\n              cookiesStrings.push(cookiesString.substring(start, lastComma));\n              start = pos;\n            } else {\n              pos = lastComma + 1;\n            }\n          } else {\n            pos += 1;\n          }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n          cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n      }\n      return cookiesStrings;\n    }\n    module.exports = parse;\n    module.exports.parse = parse;\n    module.exports.parseString = parseString;\n    module.exports.splitCookiesString = splitCookiesString;\n  }\n});\n\n// src/store.ts\nvar import_set_cookie_parser = __toESM(require_set_cookie());\nvar PERSISTENCY_KEY = \"MSW_COOKIE_STORE\";\nfunction supportsLocalStorage() {\n  try {\n    if (localStorage == null) {\n      return false;\n    }\n    const testKey = PERSISTENCY_KEY + \"_test\";\n    localStorage.setItem(testKey, \"test\");\n    localStorage.getItem(testKey);\n    localStorage.removeItem(testKey);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\nfunction isPropertyAccessible(object, method) {\n  try {\n    object[method];\n    return true;\n  } catch {\n    return false;\n  }\n}\nvar CookieStore = class {\n  constructor() {\n    this.store = /* @__PURE__ */ new Map();\n  }\n  add(request, response) {\n    if (isPropertyAccessible(request, \"credentials\") && request.credentials === \"omit\") {\n      return;\n    }\n    const requestUrl = new URL(request.url);\n    const responseCookies = response.headers.get(\"set-cookie\");\n    if (!responseCookies) {\n      return;\n    }\n    const now = Date.now();\n    const parsedResponseCookies = (0, import_set_cookie_parser.parse)(responseCookies).map(\n      ({ maxAge, ...cookie }) => ({\n        ...cookie,\n        expires: maxAge === void 0 ? cookie.expires : new Date(now + maxAge * 1e3),\n        maxAge\n      })\n    );\n    const prevCookies = this.store.get(requestUrl.origin) || /* @__PURE__ */ new Map();\n    parsedResponseCookies.forEach((cookie) => {\n      this.store.set(requestUrl.origin, prevCookies.set(cookie.name, cookie));\n    });\n  }\n  get(request) {\n    this.deleteExpiredCookies();\n    const requestUrl = new URL(request.url);\n    const originCookies = this.store.get(requestUrl.origin) || /* @__PURE__ */ new Map();\n    if (!isPropertyAccessible(request, \"credentials\")) {\n      return originCookies;\n    }\n    switch (request.credentials) {\n      case \"include\": {\n        if (typeof document === \"undefined\") {\n          return originCookies;\n        }\n        const documentCookies = (0, import_set_cookie_parser.parse)(document.cookie);\n        documentCookies.forEach((cookie) => {\n          originCookies.set(cookie.name, cookie);\n        });\n        return originCookies;\n      }\n      case \"same-origin\": {\n        return originCookies;\n      }\n      default:\n        return /* @__PURE__ */ new Map();\n    }\n  }\n  getAll() {\n    this.deleteExpiredCookies();\n    return this.store;\n  }\n  deleteAll(request) {\n    const requestUrl = new URL(request.url);\n    this.store.delete(requestUrl.origin);\n  }\n  clear() {\n    this.store.clear();\n  }\n  hydrate() {\n    if (!supportsLocalStorage()) {\n      return;\n    }\n    const persistedCookies = localStorage.getItem(PERSISTENCY_KEY);\n    if (!persistedCookies) {\n      return;\n    }\n    try {\n      const parsedCookies = JSON.parse(persistedCookies);\n      parsedCookies.forEach(([origin, cookies]) => {\n        this.store.set(\n          origin,\n          new Map(\n            cookies.map(([token, { expires, ...cookie }]) => [\n              token,\n              expires === void 0 ? cookie : { ...cookie, expires: new Date(expires) }\n            ])\n          )\n        );\n      });\n    } catch (error) {\n      console.warn(`\n[virtual-cookie] Failed to parse a stored cookie from the localStorage (key \"${PERSISTENCY_KEY}\").\n\nStored value:\n${localStorage.getItem(PERSISTENCY_KEY)}\n\nThrown exception:\n${error}\n\nInvalid value has been removed from localStorage to prevent subsequent failed parsing attempts.`);\n      localStorage.removeItem(PERSISTENCY_KEY);\n    }\n  }\n  persist() {\n    if (!supportsLocalStorage()) {\n      return;\n    }\n    const serializedCookies = Array.from(this.store.entries()).map(\n      ([origin, cookies]) => {\n        return [origin, Array.from(cookies.entries())];\n      }\n    );\n    localStorage.setItem(PERSISTENCY_KEY, JSON.stringify(serializedCookies));\n  }\n  deleteExpiredCookies() {\n    const now = Date.now();\n    this.store.forEach((originCookies, origin) => {\n      originCookies.forEach(({ expires, name }) => {\n        if (expires !== void 0 && expires.getTime() <= now) {\n          originCookies.delete(name);\n        }\n      });\n      if (originCookies.size === 0) {\n        this.store.delete(origin);\n      }\n    });\n  }\n};\nvar store = new CookieStore();\n\n//# sourceMappingURL=index.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/@mswjs/cookies/lib/index.mjs?");

/***/ }),

/***/ "./node_modules/@mswjs/interceptors/lib/browser/chunk-HAGW22AN.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@mswjs/interceptors/lib/browser/chunk-HAGW22AN.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IS_PATCHED_MODULE: () => (/* binding */ IS_PATCHED_MODULE)\n/* harmony export */ });\n// src/glossary.ts\nvar IS_PATCHED_MODULE = Symbol(\"isPatchedModule\");\n\n\n//# sourceMappingURL=chunk-HAGW22AN.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/@mswjs/interceptors/lib/browser/chunk-HAGW22AN.mjs?");

/***/ }),

/***/ "./node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INTERNAL_REQUEST_ID_HEADER_NAME: () => (/* binding */ INTERNAL_REQUEST_ID_HEADER_NAME),\n/* harmony export */   Interceptor: () => (/* binding */ Interceptor),\n/* harmony export */   InterceptorReadyState: () => (/* binding */ InterceptorReadyState),\n/* harmony export */   createRequestId: () => (/* binding */ createRequestId),\n/* harmony export */   deleteGlobalSymbol: () => (/* binding */ deleteGlobalSymbol),\n/* harmony export */   getGlobalSymbol: () => (/* binding */ getGlobalSymbol)\n/* harmony export */ });\n/* harmony import */ var _open_draft_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @open-draft/logger */ \"./node_modules/@open-draft/logger/lib/index.mjs\");\n/* harmony import */ var strict_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! strict-event-emitter */ \"./node_modules/strict-event-emitter/lib/index.mjs\");\n// src/Interceptor.ts\n\n\nvar INTERNAL_REQUEST_ID_HEADER_NAME = \"x-interceptors-internal-request-id\";\nfunction getGlobalSymbol(symbol) {\n  return (\n    // @ts-ignore https://github.com/Microsoft/TypeScript/issues/24587\n    globalThis[symbol] || void 0\n  );\n}\nfunction setGlobalSymbol(symbol, value) {\n  globalThis[symbol] = value;\n}\nfunction deleteGlobalSymbol(symbol) {\n  delete globalThis[symbol];\n}\nvar InterceptorReadyState = /* @__PURE__ */ ((InterceptorReadyState2) => {\n  InterceptorReadyState2[\"INACTIVE\"] = \"INACTIVE\";\n  InterceptorReadyState2[\"APPLYING\"] = \"APPLYING\";\n  InterceptorReadyState2[\"APPLIED\"] = \"APPLIED\";\n  InterceptorReadyState2[\"DISPOSING\"] = \"DISPOSING\";\n  InterceptorReadyState2[\"DISPOSED\"] = \"DISPOSED\";\n  return InterceptorReadyState2;\n})(InterceptorReadyState || {});\nvar Interceptor = class {\n  constructor(symbol) {\n    this.symbol = symbol;\n    this.readyState = \"INACTIVE\" /* INACTIVE */;\n    this.emitter = new strict_event_emitter__WEBPACK_IMPORTED_MODULE_1__.Emitter();\n    this.subscriptions = [];\n    this.logger = new _open_draft_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(symbol.description);\n    this.emitter.setMaxListeners(0);\n    this.logger.info(\"constructing the interceptor...\");\n  }\n  /**\n   * Determine if this interceptor can be applied\n   * in the current environment.\n   */\n  checkEnvironment() {\n    return true;\n  }\n  /**\n   * Apply this interceptor to the current process.\n   * Returns an already running interceptor instance if it's present.\n   */\n  apply() {\n    const logger = this.logger.extend(\"apply\");\n    logger.info(\"applying the interceptor...\");\n    if (this.readyState === \"APPLIED\" /* APPLIED */) {\n      logger.info(\"intercepted already applied!\");\n      return;\n    }\n    const shouldApply = this.checkEnvironment();\n    if (!shouldApply) {\n      logger.info(\"the interceptor cannot be applied in this environment!\");\n      return;\n    }\n    this.readyState = \"APPLYING\" /* APPLYING */;\n    const runningInstance = this.getInstance();\n    if (runningInstance) {\n      logger.info(\"found a running instance, reusing...\");\n      this.on = (event, listener) => {\n        logger.info('proxying the \"%s\" listener', event);\n        runningInstance.emitter.addListener(event, listener);\n        this.subscriptions.push(() => {\n          runningInstance.emitter.removeListener(event, listener);\n          logger.info('removed proxied \"%s\" listener!', event);\n        });\n        return this;\n      };\n      this.readyState = \"APPLIED\" /* APPLIED */;\n      return;\n    }\n    logger.info(\"no running instance found, setting up a new instance...\");\n    this.setup();\n    this.setInstance();\n    this.readyState = \"APPLIED\" /* APPLIED */;\n  }\n  /**\n   * Setup the module augments and stubs necessary for this interceptor.\n   * This method is not run if there's a running interceptor instance\n   * to prevent instantiating an interceptor multiple times.\n   */\n  setup() {\n  }\n  /**\n   * Listen to the interceptor's public events.\n   */\n  on(event, listener) {\n    const logger = this.logger.extend(\"on\");\n    if (this.readyState === \"DISPOSING\" /* DISPOSING */ || this.readyState === \"DISPOSED\" /* DISPOSED */) {\n      logger.info(\"cannot listen to events, already disposed!\");\n      return this;\n    }\n    logger.info('adding \"%s\" event listener:', event, listener);\n    this.emitter.on(event, listener);\n    return this;\n  }\n  once(event, listener) {\n    this.emitter.once(event, listener);\n    return this;\n  }\n  off(event, listener) {\n    this.emitter.off(event, listener);\n    return this;\n  }\n  removeAllListeners(event) {\n    this.emitter.removeAllListeners(event);\n    return this;\n  }\n  /**\n   * Disposes of any side-effects this interceptor has introduced.\n   */\n  dispose() {\n    const logger = this.logger.extend(\"dispose\");\n    if (this.readyState === \"DISPOSED\" /* DISPOSED */) {\n      logger.info(\"cannot dispose, already disposed!\");\n      return;\n    }\n    logger.info(\"disposing the interceptor...\");\n    this.readyState = \"DISPOSING\" /* DISPOSING */;\n    if (!this.getInstance()) {\n      logger.info(\"no interceptors running, skipping dispose...\");\n      return;\n    }\n    this.clearInstance();\n    logger.info(\"global symbol deleted:\", getGlobalSymbol(this.symbol));\n    if (this.subscriptions.length > 0) {\n      logger.info(\"disposing of %d subscriptions...\", this.subscriptions.length);\n      for (const dispose of this.subscriptions) {\n        dispose();\n      }\n      this.subscriptions = [];\n      logger.info(\"disposed of all subscriptions!\", this.subscriptions.length);\n    }\n    this.emitter.removeAllListeners();\n    logger.info(\"destroyed the listener!\");\n    this.readyState = \"DISPOSED\" /* DISPOSED */;\n  }\n  getInstance() {\n    var _a;\n    const instance = getGlobalSymbol(this.symbol);\n    this.logger.info(\"retrieved global instance:\", (_a = instance == null ? void 0 : instance.constructor) == null ? void 0 : _a.name);\n    return instance;\n  }\n  setInstance() {\n    setGlobalSymbol(this.symbol, this);\n    this.logger.info(\"set global instance!\", this.symbol.description);\n  }\n  clearInstance() {\n    deleteGlobalSymbol(this.symbol);\n    this.logger.info(\"cleared global instance!\", this.symbol.description);\n  }\n};\n\n// src/createRequestId.ts\nfunction createRequestId() {\n  return Math.random().toString(16).slice(2);\n}\n\n\n//# sourceMappingURL=chunk-QED3Q6Z2.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs?");

/***/ }),

/***/ "./node_modules/@mswjs/interceptors/lib/browser/chunk-UJZOJSMP.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@mswjs/interceptors/lib/browser/chunk-UJZOJSMP.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBuffer: () => (/* binding */ decodeBuffer),\n/* harmony export */   encodeBuffer: () => (/* binding */ encodeBuffer),\n/* harmony export */   isResponseWithoutBody: () => (/* binding */ isResponseWithoutBody),\n/* harmony export */   toArrayBuffer: () => (/* binding */ toArrayBuffer)\n/* harmony export */ });\n// src/utils/bufferUtils.ts\nvar encoder = new TextEncoder();\nfunction encodeBuffer(text) {\n  return encoder.encode(text);\n}\nfunction decodeBuffer(buffer, encoding) {\n  const decoder = new TextDecoder(encoding);\n  return decoder.decode(buffer);\n}\nfunction toArrayBuffer(array) {\n  return array.buffer.slice(\n    array.byteOffset,\n    array.byteOffset + array.byteLength\n  );\n}\n\n// src/utils/responseUtils.ts\nvar RESPONSE_STATUS_CODES_WITHOUT_BODY = /* @__PURE__ */ new Set([\n  101,\n  103,\n  204,\n  205,\n  304\n]);\nfunction isResponseWithoutBody(status) {\n  return RESPONSE_STATUS_CODES_WITHOUT_BODY.has(status);\n}\n\n\n//# sourceMappingURL=chunk-UJZOJSMP.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/@mswjs/interceptors/lib/browser/chunk-UJZOJSMP.mjs?");

/***/ }),

/***/ "./node_modules/@mswjs/interceptors/lib/browser/index.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@mswjs/interceptors/lib/browser/index.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BatchInterceptor: () => (/* binding */ BatchInterceptor),\n/* harmony export */   INTERNAL_REQUEST_ID_HEADER_NAME: () => (/* reexport safe */ _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.INTERNAL_REQUEST_ID_HEADER_NAME),\n/* harmony export */   IS_PATCHED_MODULE: () => (/* reexport safe */ _chunk_HAGW22AN_mjs__WEBPACK_IMPORTED_MODULE_1__.IS_PATCHED_MODULE),\n/* harmony export */   Interceptor: () => (/* reexport safe */ _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.Interceptor),\n/* harmony export */   InterceptorReadyState: () => (/* reexport safe */ _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.InterceptorReadyState),\n/* harmony export */   createRequestId: () => (/* reexport safe */ _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.createRequestId),\n/* harmony export */   decodeBuffer: () => (/* reexport safe */ _chunk_UJZOJSMP_mjs__WEBPACK_IMPORTED_MODULE_0__.decodeBuffer),\n/* harmony export */   deleteGlobalSymbol: () => (/* reexport safe */ _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.deleteGlobalSymbol),\n/* harmony export */   encodeBuffer: () => (/* reexport safe */ _chunk_UJZOJSMP_mjs__WEBPACK_IMPORTED_MODULE_0__.encodeBuffer),\n/* harmony export */   getCleanUrl: () => (/* binding */ getCleanUrl),\n/* harmony export */   getGlobalSymbol: () => (/* reexport safe */ _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.getGlobalSymbol),\n/* harmony export */   isResponseWithoutBody: () => (/* reexport safe */ _chunk_UJZOJSMP_mjs__WEBPACK_IMPORTED_MODULE_0__.isResponseWithoutBody)\n/* harmony export */ });\n/* harmony import */ var _chunk_UJZOJSMP_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-UJZOJSMP.mjs */ \"./node_modules/@mswjs/interceptors/lib/browser/chunk-UJZOJSMP.mjs\");\n/* harmony import */ var _chunk_HAGW22AN_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-HAGW22AN.mjs */ \"./node_modules/@mswjs/interceptors/lib/browser/chunk-HAGW22AN.mjs\");\n/* harmony import */ var _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-QED3Q6Z2.mjs */ \"./node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs\");\n\n\n\n\n// src/BatchInterceptor.ts\nvar BatchInterceptor = class extends _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_2__.Interceptor {\n  constructor(options) {\n    BatchInterceptor.symbol = Symbol(options.name);\n    super(BatchInterceptor.symbol);\n    this.interceptors = options.interceptors;\n  }\n  setup() {\n    const logger = this.logger.extend(\"setup\");\n    logger.info(\"applying all %d interceptors...\", this.interceptors.length);\n    for (const interceptor of this.interceptors) {\n      logger.info('applying \"%s\" interceptor...', interceptor.constructor.name);\n      interceptor.apply();\n      logger.info(\"adding interceptor dispose subscription\");\n      this.subscriptions.push(() => interceptor.dispose());\n    }\n  }\n  on(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.on(event, listener);\n    }\n    return this;\n  }\n  once(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.once(event, listener);\n    }\n    return this;\n  }\n  off(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.off(event, listener);\n    }\n    return this;\n  }\n  removeAllListeners(event) {\n    for (const interceptors of this.interceptors) {\n      interceptors.removeAllListeners(event);\n    }\n    return this;\n  }\n};\n\n// src/utils/getCleanUrl.ts\nfunction getCleanUrl(url, isAbsolute = true) {\n  return [isAbsolute && url.origin, url.pathname].filter(Boolean).join(\"\");\n}\n\n//# sourceMappingURL=index.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/@mswjs/interceptors/lib/browser/index.mjs?");

/***/ }),

/***/ "./node_modules/@open-draft/logger/lib/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@open-draft/logger/lib/index.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Logger: () => (/* binding */ Logger)\n/* harmony export */ });\n/* harmony import */ var is_node_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! is-node-process */ \"./node_modules/is-node-process/lib/index.mjs\");\n/* harmony import */ var outvariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! outvariant */ \"./node_modules/outvariant/lib/index.mjs\");\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/index.ts\n\n\n\n// src/colors.ts\nvar colors_exports = {};\n__export(colors_exports, {\n  blue: () => blue,\n  gray: () => gray,\n  green: () => green,\n  red: () => red,\n  yellow: () => yellow\n});\nfunction yellow(text) {\n  return `\\x1B[33m${text}\\x1B[0m`;\n}\nfunction blue(text) {\n  return `\\x1B[34m${text}\\x1B[0m`;\n}\nfunction gray(text) {\n  return `\\x1B[90m${text}\\x1B[0m`;\n}\nfunction red(text) {\n  return `\\x1B[31m${text}\\x1B[0m`;\n}\nfunction green(text) {\n  return `\\x1B[32m${text}\\x1B[0m`;\n}\n\n// src/index.ts\nvar IS_NODE = (0,is_node_process__WEBPACK_IMPORTED_MODULE_0__.isNodeProcess)();\nvar Logger = class {\n  constructor(name) {\n    this.name = name;\n    this.prefix = `[${this.name}]`;\n    const LOGGER_NAME = getVariable(\"DEBUG\");\n    const LOGGER_LEVEL = getVariable(\"LOG_LEVEL\");\n    const isLoggingEnabled = LOGGER_NAME === \"1\" || LOGGER_NAME === \"true\" || typeof LOGGER_NAME !== \"undefined\" && this.name.startsWith(LOGGER_NAME);\n    if (isLoggingEnabled) {\n      this.debug = isDefinedAndNotEquals(LOGGER_LEVEL, \"debug\") ? noop : this.debug;\n      this.info = isDefinedAndNotEquals(LOGGER_LEVEL, \"info\") ? noop : this.info;\n      this.success = isDefinedAndNotEquals(LOGGER_LEVEL, \"success\") ? noop : this.success;\n      this.warning = isDefinedAndNotEquals(LOGGER_LEVEL, \"warning\") ? noop : this.warning;\n      this.error = isDefinedAndNotEquals(LOGGER_LEVEL, \"error\") ? noop : this.error;\n    } else {\n      this.info = noop;\n      this.success = noop;\n      this.warning = noop;\n      this.error = noop;\n      this.only = noop;\n    }\n  }\n  prefix;\n  extend(domain) {\n    return new Logger(`${this.name}:${domain}`);\n  }\n  /**\n   * Print a debug message.\n   * @example\n   * logger.debug('no duplicates found, creating a document...')\n   */\n  debug(message, ...positionals) {\n    this.logEntry({\n      level: \"debug\",\n      message: gray(message),\n      positionals,\n      prefix: this.prefix,\n      colors: {\n        prefix: \"gray\"\n      }\n    });\n  }\n  /**\n   * Print an info message.\n   * @example\n   * logger.info('start parsing...')\n   */\n  info(message, ...positionals) {\n    this.logEntry({\n      level: \"info\",\n      message,\n      positionals,\n      prefix: this.prefix,\n      colors: {\n        prefix: \"blue\"\n      }\n    });\n    const performance2 = new PerformanceEntry();\n    return (message2, ...positionals2) => {\n      performance2.measure();\n      this.logEntry({\n        level: \"info\",\n        message: `${message2} ${gray(`${performance2.deltaTime}ms`)}`,\n        positionals: positionals2,\n        prefix: this.prefix,\n        colors: {\n          prefix: \"blue\"\n        }\n      });\n    };\n  }\n  /**\n   * Print a success message.\n   * @example\n   * logger.success('successfully created document')\n   */\n  success(message, ...positionals) {\n    this.logEntry({\n      level: \"info\",\n      message,\n      positionals,\n      prefix: `\\u2714 ${this.prefix}`,\n      colors: {\n        timestamp: \"green\",\n        prefix: \"green\"\n      }\n    });\n  }\n  /**\n   * Print a warning.\n   * @example\n   * logger.warning('found legacy document format')\n   */\n  warning(message, ...positionals) {\n    this.logEntry({\n      level: \"warning\",\n      message,\n      positionals,\n      prefix: `\\u26A0 ${this.prefix}`,\n      colors: {\n        timestamp: \"yellow\",\n        prefix: \"yellow\"\n      }\n    });\n  }\n  /**\n   * Print an error message.\n   * @example\n   * logger.error('something went wrong')\n   */\n  error(message, ...positionals) {\n    this.logEntry({\n      level: \"error\",\n      message,\n      positionals,\n      prefix: `\\u2716 ${this.prefix}`,\n      colors: {\n        timestamp: \"red\",\n        prefix: \"red\"\n      }\n    });\n  }\n  /**\n   * Execute the given callback only when the logging is enabled.\n   * This is skipped in its entirety and has no runtime cost otherwise.\n   * This executes regardless of the log level.\n   * @example\n   * logger.only(() => {\n   *   logger.info('additional info')\n   * })\n   */\n  only(callback) {\n    callback();\n  }\n  createEntry(level, message) {\n    return {\n      timestamp: /* @__PURE__ */ new Date(),\n      level,\n      message\n    };\n  }\n  logEntry(args) {\n    const {\n      level,\n      message,\n      prefix,\n      colors: customColors,\n      positionals = []\n    } = args;\n    const entry = this.createEntry(level, message);\n    const timestampColor = customColors?.timestamp || \"gray\";\n    const prefixColor = customColors?.prefix || \"gray\";\n    const colorize = {\n      timestamp: colors_exports[timestampColor],\n      prefix: colors_exports[prefixColor]\n    };\n    const write = this.getWriter(level);\n    write(\n      [colorize.timestamp(this.formatTimestamp(entry.timestamp))].concat(prefix != null ? colorize.prefix(prefix) : []).concat(serializeInput(message)).join(\" \"),\n      ...positionals.map(serializeInput)\n    );\n  }\n  formatTimestamp(timestamp) {\n    return `${timestamp.toLocaleTimeString(\n      \"en-GB\"\n    )}:${timestamp.getMilliseconds()}`;\n  }\n  getWriter(level) {\n    switch (level) {\n      case \"debug\":\n      case \"success\":\n      case \"info\": {\n        return log;\n      }\n      case \"warning\": {\n        return warn;\n      }\n      case \"error\": {\n        return error;\n      }\n    }\n  }\n};\nvar PerformanceEntry = class {\n  startTime;\n  endTime;\n  deltaTime;\n  constructor() {\n    this.startTime = performance.now();\n  }\n  measure() {\n    this.endTime = performance.now();\n    const deltaTime = this.endTime - this.startTime;\n    this.deltaTime = deltaTime.toFixed(2);\n  }\n};\nvar noop = () => void 0;\nfunction log(message, ...positionals) {\n  if (IS_NODE) {\n    process.stdout.write((0,outvariant__WEBPACK_IMPORTED_MODULE_1__.format)(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.log(message, ...positionals);\n}\nfunction warn(message, ...positionals) {\n  if (IS_NODE) {\n    process.stderr.write((0,outvariant__WEBPACK_IMPORTED_MODULE_1__.format)(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.warn(message, ...positionals);\n}\nfunction error(message, ...positionals) {\n  if (IS_NODE) {\n    process.stderr.write((0,outvariant__WEBPACK_IMPORTED_MODULE_1__.format)(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.error(message, ...positionals);\n}\nfunction getVariable(variableName) {\n  if (IS_NODE) {\n    return \"MISSING_ENV_VAR\"[variableName];\n  }\n  return globalThis[variableName]?.toString();\n}\nfunction isDefinedAndNotEquals(value, expected) {\n  return value !== void 0 && value !== expected;\n}\nfunction serializeInput(message) {\n  if (typeof message === \"undefined\") {\n    return \"undefined\";\n  }\n  if (message === null) {\n    return \"null\";\n  }\n  if (typeof message === \"string\") {\n    return message;\n  }\n  if (typeof message === \"object\") {\n    return JSON.stringify(message);\n  }\n  return message.toString();\n}\n\n\n\n//# sourceURL=webpack://sample-app/./node_modules/@open-draft/logger/lib/index.mjs?");

/***/ }),

/***/ "./node_modules/@open-draft/until/lib/index.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@open-draft/until/lib/index.mjs ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   until: () => (/* binding */ until)\n/* harmony export */ });\n// src/until.ts\nvar until = async (promise) => {\n  try {\n    const data = await promise().catch((error) => {\n      throw error;\n    });\n    return { error: null, data };\n  } catch (error) {\n    return { error, data: null };\n  }\n};\n\n//# sourceMappingURL=index.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/@open-draft/until/lib/index.mjs?");

/***/ }),

/***/ "./node_modules/headers-polyfill/lib/index.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/headers-polyfill/lib/index.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Headers: () => (/* binding */ Headers),\n/* harmony export */   flattenHeadersList: () => (/* binding */ flattenHeadersList),\n/* harmony export */   flattenHeadersObject: () => (/* binding */ flattenHeadersObject),\n/* harmony export */   getRawHeaders: () => (/* binding */ getRawHeaders),\n/* harmony export */   headersToList: () => (/* binding */ headersToList),\n/* harmony export */   headersToObject: () => (/* binding */ headersToObject),\n/* harmony export */   headersToString: () => (/* binding */ headersToString),\n/* harmony export */   listToHeaders: () => (/* binding */ listToHeaders),\n/* harmony export */   objectToHeaders: () => (/* binding */ objectToHeaders),\n/* harmony export */   reduceHeadersObject: () => (/* binding */ reduceHeadersObject),\n/* harmony export */   stringToHeaders: () => (/* binding */ stringToHeaders)\n/* harmony export */ });\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/set-cookie-parser/lib/set-cookie.js\nvar require_set_cookie = __commonJS({\n  \"node_modules/set-cookie-parser/lib/set-cookie.js\"(exports, module) {\n    \"use strict\";\n    var defaultParseOptions = {\n      decodeValues: true,\n      map: false,\n      silent: false\n    };\n    function isNonEmptyString(str) {\n      return typeof str === \"string\" && !!str.trim();\n    }\n    function parseString(setCookieValue, options) {\n      var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n      var nameValuePairStr = parts.shift();\n      var parsed = parseNameValuePair(nameValuePairStr);\n      var name = parsed.name;\n      var value = parsed.value;\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      try {\n        value = options.decodeValues ? decodeURIComponent(value) : value;\n      } catch (e) {\n        console.error(\n          \"set-cookie-parser encountered an error while decoding a cookie with value '\" + value + \"'. Set options.decodeValues to false to disable this feature.\",\n          e\n        );\n      }\n      var cookie = {\n        name,\n        value\n      };\n      parts.forEach(function(part) {\n        var sides = part.split(\"=\");\n        var key = sides.shift().trimLeft().toLowerCase();\n        var value2 = sides.join(\"=\");\n        if (key === \"expires\") {\n          cookie.expires = new Date(value2);\n        } else if (key === \"max-age\") {\n          cookie.maxAge = parseInt(value2, 10);\n        } else if (key === \"secure\") {\n          cookie.secure = true;\n        } else if (key === \"httponly\") {\n          cookie.httpOnly = true;\n        } else if (key === \"samesite\") {\n          cookie.sameSite = value2;\n        } else {\n          cookie[key] = value2;\n        }\n      });\n      return cookie;\n    }\n    function parseNameValuePair(nameValuePairStr) {\n      var name = \"\";\n      var value = \"\";\n      var nameValueArr = nameValuePairStr.split(\"=\");\n      if (nameValueArr.length > 1) {\n        name = nameValueArr.shift();\n        value = nameValueArr.join(\"=\");\n      } else {\n        value = nameValuePairStr;\n      }\n      return { name, value };\n    }\n    function parse(input, options) {\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      if (!input) {\n        if (!options.map) {\n          return [];\n        } else {\n          return {};\n        }\n      }\n      if (input.headers) {\n        if (typeof input.headers.getSetCookie === \"function\") {\n          input = input.headers.getSetCookie();\n        } else if (input.headers[\"set-cookie\"]) {\n          input = input.headers[\"set-cookie\"];\n        } else {\n          var sch = input.headers[Object.keys(input.headers).find(function(key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })];\n          if (!sch && input.headers.cookie && !options.silent) {\n            console.warn(\n              \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n            );\n          }\n          input = sch;\n        }\n      }\n      if (!Array.isArray(input)) {\n        input = [input];\n      }\n      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;\n      if (!options.map) {\n        return input.filter(isNonEmptyString).map(function(str) {\n          return parseString(str, options);\n        });\n      } else {\n        var cookies = {};\n        return input.filter(isNonEmptyString).reduce(function(cookies2, str) {\n          var cookie = parseString(str, options);\n          cookies2[cookie.name] = cookie;\n          return cookies2;\n        }, cookies);\n      }\n    }\n    function splitCookiesString2(cookiesString) {\n      if (Array.isArray(cookiesString)) {\n        return cookiesString;\n      }\n      if (typeof cookiesString !== \"string\") {\n        return [];\n      }\n      var cookiesStrings = [];\n      var pos = 0;\n      var start;\n      var ch;\n      var lastComma;\n      var nextStart;\n      var cookiesSeparatorFound;\n      function skipWhitespace() {\n        while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n          pos += 1;\n        }\n        return pos < cookiesString.length;\n      }\n      function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n      }\n      while (pos < cookiesString.length) {\n        start = pos;\n        cookiesSeparatorFound = false;\n        while (skipWhitespace()) {\n          ch = cookiesString.charAt(pos);\n          if (ch === \",\") {\n            lastComma = pos;\n            pos += 1;\n            skipWhitespace();\n            nextStart = pos;\n            while (pos < cookiesString.length && notSpecialChar()) {\n              pos += 1;\n            }\n            if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n              cookiesSeparatorFound = true;\n              pos = nextStart;\n              cookiesStrings.push(cookiesString.substring(start, lastComma));\n              start = pos;\n            } else {\n              pos = lastComma + 1;\n            }\n          } else {\n            pos += 1;\n          }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n          cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n      }\n      return cookiesStrings;\n    }\n    module.exports = parse;\n    module.exports.parse = parse;\n    module.exports.parseString = parseString;\n    module.exports.splitCookiesString = splitCookiesString2;\n  }\n});\n\n// src/Headers.ts\nvar import_set_cookie_parser = __toESM(require_set_cookie());\n\n// src/utils/normalizeHeaderName.ts\nvar HEADERS_INVALID_CHARACTERS = /[^a-z0-9\\-#$%&'*+.^_`|~]/i;\nfunction normalizeHeaderName(name) {\n  if (HEADERS_INVALID_CHARACTERS.test(name) || name.trim() === \"\") {\n    throw new TypeError(\"Invalid character in header field name\");\n  }\n  return name.trim().toLowerCase();\n}\n\n// src/utils/normalizeHeaderValue.ts\nvar charCodesToRemove = [\n  String.fromCharCode(10),\n  String.fromCharCode(13),\n  String.fromCharCode(9),\n  String.fromCharCode(32)\n];\nvar HEADER_VALUE_REMOVE_REGEXP = new RegExp(\n  `(^[${charCodesToRemove.join(\"\")}]|$[${charCodesToRemove.join(\"\")}])`,\n  \"g\"\n);\nfunction normalizeHeaderValue(value) {\n  const nextValue = value.replace(HEADER_VALUE_REMOVE_REGEXP, \"\");\n  return nextValue;\n}\n\n// src/utils/isValidHeaderName.ts\nfunction isValidHeaderName(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  if (value.length === 0) {\n    return false;\n  }\n  for (let i = 0; i < value.length; i++) {\n    const character = value.charCodeAt(i);\n    if (character > 127 || !isToken(character)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isToken(value) {\n  return ![\n    127,\n    32,\n    \"(\",\n    \")\",\n    \"<\",\n    \">\",\n    \"@\",\n    \",\",\n    \";\",\n    \":\",\n    \"\\\\\",\n    '\"',\n    \"/\",\n    \"[\",\n    \"]\",\n    \"?\",\n    \"=\",\n    \"{\",\n    \"}\"\n  ].includes(value);\n}\n\n// src/utils/isValidHeaderValue.ts\nfunction isValidHeaderValue(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  if (value.trim() !== value) {\n    return false;\n  }\n  for (let i = 0; i < value.length; i++) {\n    const character = value.charCodeAt(i);\n    if (\n      // NUL.\n      character === 0 || // HTTP newline bytes.\n      character === 10 || character === 13\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// src/Headers.ts\nvar NORMALIZED_HEADERS = Symbol(\"normalizedHeaders\");\nvar RAW_HEADER_NAMES = Symbol(\"rawHeaderNames\");\nvar HEADER_VALUE_DELIMITER = \", \";\nvar _a, _b, _c;\nvar Headers = class _Headers {\n  constructor(init) {\n    // Normalized header {\"name\":\"a, b\"} storage.\n    this[_a] = {};\n    // Keeps the mapping between the raw header name\n    // and the normalized header name to ease the lookup.\n    this[_b] = /* @__PURE__ */ new Map();\n    this[_c] = \"Headers\";\n    if ([\"Headers\", \"HeadersPolyfill\"].includes(init?.constructor.name) || init instanceof _Headers || typeof globalThis.Headers !== \"undefined\" && init instanceof globalThis.Headers) {\n      const initialHeaders = init;\n      initialHeaders.forEach((value, name) => {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(init)) {\n      init.forEach(([name, value]) => {\n        this.append(\n          name,\n          Array.isArray(value) ? value.join(HEADER_VALUE_DELIMITER) : value\n        );\n      });\n    } else if (init) {\n      Object.getOwnPropertyNames(init).forEach((name) => {\n        const value = init[name];\n        this.append(\n          name,\n          Array.isArray(value) ? value.join(HEADER_VALUE_DELIMITER) : value\n        );\n      });\n    }\n  }\n  [(_a = NORMALIZED_HEADERS, _b = RAW_HEADER_NAMES, _c = Symbol.toStringTag, Symbol.iterator)]() {\n    return this.entries();\n  }\n  *keys() {\n    for (const [name] of this.entries()) {\n      yield name;\n    }\n  }\n  *values() {\n    for (const [, value] of this.entries()) {\n      yield value;\n    }\n  }\n  *entries() {\n    let sortedKeys = Object.keys(this[NORMALIZED_HEADERS]).sort(\n      (a, b) => a.localeCompare(b)\n    );\n    for (const name of sortedKeys) {\n      if (name === \"set-cookie\") {\n        for (const value of this.getSetCookie()) {\n          yield [name, value];\n        }\n      } else {\n        yield [name, this.get(name)];\n      }\n    }\n  }\n  /**\n   * Returns a boolean stating whether a `Headers` object contains a certain header.\n   */\n  has(name) {\n    if (!isValidHeaderName(name)) {\n      throw new TypeError(`Invalid header name \"${name}\"`);\n    }\n    return this[NORMALIZED_HEADERS].hasOwnProperty(normalizeHeaderName(name));\n  }\n  /**\n   * Returns a `ByteString` sequence of all the values of a header with a given name.\n   */\n  get(name) {\n    if (!isValidHeaderName(name)) {\n      throw TypeError(`Invalid header name \"${name}\"`);\n    }\n    return this[NORMALIZED_HEADERS][normalizeHeaderName(name)] ?? null;\n  }\n  /**\n   * Sets a new value for an existing header inside a `Headers` object, or adds the header if it does not already exist.\n   */\n  set(name, value) {\n    if (!isValidHeaderName(name) || !isValidHeaderValue(value)) {\n      return;\n    }\n    const normalizedName = normalizeHeaderName(name);\n    const normalizedValue = normalizeHeaderValue(value);\n    this[NORMALIZED_HEADERS][normalizedName] = normalizeHeaderValue(normalizedValue);\n    this[RAW_HEADER_NAMES].set(normalizedName, name);\n  }\n  /**\n   * Appends a new value onto an existing header inside a `Headers` object, or adds the header if it does not already exist.\n   */\n  append(name, value) {\n    if (!isValidHeaderName(name) || !isValidHeaderValue(value)) {\n      return;\n    }\n    const normalizedName = normalizeHeaderName(name);\n    const normalizedValue = normalizeHeaderValue(value);\n    let resolvedValue = this.has(normalizedName) ? `${this.get(normalizedName)}, ${normalizedValue}` : normalizedValue;\n    this.set(name, resolvedValue);\n  }\n  /**\n   * Deletes a header from the `Headers` object.\n   */\n  delete(name) {\n    if (!isValidHeaderName(name)) {\n      return;\n    }\n    if (!this.has(name)) {\n      return;\n    }\n    const normalizedName = normalizeHeaderName(name);\n    delete this[NORMALIZED_HEADERS][normalizedName];\n    this[RAW_HEADER_NAMES].delete(normalizedName);\n  }\n  /**\n   * Traverses the `Headers` object,\n   * calling the given callback for each header.\n   */\n  forEach(callback, thisArg) {\n    for (const [name, value] of this.entries()) {\n      callback.call(thisArg, value, name, this);\n    }\n  }\n  /**\n   * Returns an array containing the values\n   * of all Set-Cookie headers associated\n   * with a response\n   */\n  getSetCookie() {\n    const setCookieHeader = this.get(\"set-cookie\");\n    if (setCookieHeader === null) {\n      return [];\n    }\n    if (setCookieHeader === \"\") {\n      return [\"\"];\n    }\n    return (0, import_set_cookie_parser.splitCookiesString)(setCookieHeader);\n  }\n};\n\n// src/getRawHeaders.ts\nfunction getRawHeaders(headers) {\n  const rawHeaders = {};\n  for (const [name, value] of headers.entries()) {\n    rawHeaders[headers[RAW_HEADER_NAMES].get(name)] = value;\n  }\n  return rawHeaders;\n}\n\n// src/transformers/headersToList.ts\nfunction headersToList(headers) {\n  const headersList = [];\n  headers.forEach((value, name) => {\n    const resolvedValue = value.includes(\",\") ? value.split(\",\").map((value2) => value2.trim()) : value;\n    headersList.push([name, resolvedValue]);\n  });\n  return headersList;\n}\n\n// src/transformers/headersToString.ts\nfunction headersToString(headers) {\n  const list = headersToList(headers);\n  const lines = list.map(([name, value]) => {\n    const values = [].concat(value);\n    return `${name}: ${values.join(\", \")}`;\n  });\n  return lines.join(\"\\r\\n\");\n}\n\n// src/transformers/headersToObject.ts\nvar singleValueHeaders = [\"user-agent\"];\nfunction headersToObject(headers) {\n  const headersObject = {};\n  headers.forEach((value, name) => {\n    const isMultiValue = !singleValueHeaders.includes(name.toLowerCase()) && value.includes(\",\");\n    headersObject[name] = isMultiValue ? value.split(\",\").map((s) => s.trim()) : value;\n  });\n  return headersObject;\n}\n\n// src/transformers/stringToHeaders.ts\nfunction stringToHeaders(str) {\n  const lines = str.trim().split(/[\\r\\n]+/);\n  return lines.reduce((headers, line) => {\n    if (line.trim() === \"\") {\n      return headers;\n    }\n    const parts = line.split(\": \");\n    const name = parts.shift();\n    const value = parts.join(\": \");\n    headers.append(name, value);\n    return headers;\n  }, new Headers());\n}\n\n// src/transformers/listToHeaders.ts\nfunction listToHeaders(list) {\n  const headers = new Headers();\n  list.forEach(([name, value]) => {\n    const values = [].concat(value);\n    values.forEach((value2) => {\n      headers.append(name, value2);\n    });\n  });\n  return headers;\n}\n\n// src/transformers/reduceHeadersObject.ts\nfunction reduceHeadersObject(headers, reducer, initialState) {\n  return Object.keys(headers).reduce((nextHeaders, name) => {\n    return reducer(nextHeaders, name, headers[name]);\n  }, initialState);\n}\n\n// src/transformers/objectToHeaders.ts\nfunction objectToHeaders(headersObject) {\n  return reduceHeadersObject(\n    headersObject,\n    (headers, name, value) => {\n      const values = [].concat(value).filter(Boolean);\n      values.forEach((value2) => {\n        headers.append(name, value2);\n      });\n      return headers;\n    },\n    new Headers()\n  );\n}\n\n// src/transformers/flattenHeadersList.ts\nfunction flattenHeadersList(list) {\n  return list.map(([name, values]) => {\n    return [name, [].concat(values).join(\", \")];\n  });\n}\n\n// src/transformers/flattenHeadersObject.ts\nfunction flattenHeadersObject(headersObject) {\n  return reduceHeadersObject(\n    headersObject,\n    (headers, name, value) => {\n      headers[name] = [].concat(value).join(\", \");\n      return headers;\n    },\n    {}\n  );\n}\n\n//# sourceMappingURL=index.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/headers-polyfill/lib/index.mjs?");

/***/ }),

/***/ "./node_modules/is-node-process/lib/index.mjs":
/*!****************************************************!*\
  !*** ./node_modules/is-node-process/lib/index.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNodeProcess: () => (/* binding */ isNodeProcess)\n/* harmony export */ });\n// src/index.ts\nfunction isNodeProcess() {\n  if (typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\") {\n    return true;\n  }\n  if (typeof process !== \"undefined\") {\n    const type = process.type;\n    if (type === \"renderer\" || type === \"worker\") {\n      return false;\n    }\n    return !!(process.versions && process.versions.node);\n  }\n  return false;\n}\n\n//# sourceMappingURL=index.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/is-node-process/lib/index.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/browser/index.mjs":
/*!************************************************!*\
  !*** ./node_modules/msw/lib/browser/index.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SetupWorkerApi: () => (/* binding */ SetupWorkerApi),\n/* harmony export */   setupWorker: () => (/* binding */ setupWorker)\n/* harmony export */ });\n/* harmony import */ var _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/utils/internal/devUtils.mjs */ \"./node_modules/msw/lib/core/utils/internal/devUtils.mjs\");\n/* harmony import */ var _core_handlers_RequestHandler_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/handlers/RequestHandler.mjs */ \"./node_modules/msw/lib/core/handlers/RequestHandler.mjs\");\n/* harmony import */ var _core_utils_handleRequest_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/utils/handleRequest.mjs */ \"./node_modules/msw/lib/core/utils/handleRequest.mjs\");\n/* harmony import */ var _core_utils_toResponseInit_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/utils/toResponseInit.mjs */ \"./node_modules/msw/lib/core/utils/toResponseInit.mjs\");\n/* harmony import */ var _core_SetupApi_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/SetupApi.mjs */ \"./node_modules/msw/lib/core/SetupApi.mjs\");\n/* harmony import */ var _core_utils_internal_mergeRight_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/utils/internal/mergeRight.mjs */ \"./node_modules/msw/lib/core/utils/internal/mergeRight.mjs\");\n// node_modules/.pnpm/outvariant@1.4.2/node_modules/outvariant/lib/index.mjs\nvar POSITIONALS_EXP = /(%?)(%([sdijo]))/g;\nfunction serializePositional(positional, flag) {\n  switch (flag) {\n    case \"s\":\n      return positional;\n    case \"d\":\n    case \"i\":\n      return Number(positional);\n    case \"j\":\n      return JSON.stringify(positional);\n    case \"o\": {\n      if (typeof positional === \"string\") {\n        return positional;\n      }\n      const json = JSON.stringify(positional);\n      if (json === \"{}\" || json === \"[]\" || /^\\[object .+?\\]$/.test(json)) {\n        return positional;\n      }\n      return json;\n    }\n  }\n}\nfunction format(message, ...positionals) {\n  if (positionals.length === 0) {\n    return message;\n  }\n  let positionalIndex = 0;\n  let formattedMessage = message.replace(\n    POSITIONALS_EXP,\n    (match, isEscaped, _, flag) => {\n      const positional = positionals[positionalIndex];\n      const value = serializePositional(positional, flag);\n      if (!isEscaped) {\n        positionalIndex++;\n        return value;\n      }\n      return match;\n    }\n  );\n  if (positionalIndex < positionals.length) {\n    formattedMessage += ` ${positionals.slice(positionalIndex).join(\" \")}`;\n  }\n  formattedMessage = formattedMessage.replace(/%{2,2}/g, \"%\");\n  return formattedMessage;\n}\nvar STACK_FRAMES_TO_IGNORE = 2;\nfunction cleanErrorStack(error2) {\n  if (!error2.stack) {\n    return;\n  }\n  const nextStack = error2.stack.split(\"\\n\");\n  nextStack.splice(1, STACK_FRAMES_TO_IGNORE);\n  error2.stack = nextStack.join(\"\\n\");\n}\nvar InvariantError = class extends Error {\n  constructor(message, ...positionals) {\n    super(message);\n    this.message = message;\n    this.name = \"Invariant Violation\";\n    this.message = format(message, ...positionals);\n    cleanErrorStack(this);\n  }\n};\nvar invariant = (predicate, message, ...positionals) => {\n  if (!predicate) {\n    throw new InvariantError(message, ...positionals);\n  }\n};\ninvariant.as = (ErrorConstructor, predicate, message, ...positionals) => {\n  if (!predicate) {\n    const formatMessage = positionals.length === 0 ? message : format(message, positionals);\n    let error2;\n    try {\n      error2 = Reflect.construct(ErrorConstructor, [formatMessage]);\n    } catch (err) {\n      error2 = ErrorConstructor(formatMessage);\n    }\n    throw error2;\n  }\n};\n\n// node_modules/.pnpm/is-node-process@1.2.0/node_modules/is-node-process/lib/index.mjs\nfunction isNodeProcess() {\n  if (typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\") {\n    return true;\n  }\n  if (typeof process !== \"undefined\") {\n    const type = process.type;\n    if (type === \"renderer\" || type === \"worker\") {\n      return false;\n    }\n    return !!(process.versions && process.versions.node);\n  }\n  return false;\n}\n\n// src/browser/setupWorker/start/createStartHandler.ts\n\n\n// node_modules/.pnpm/@open-draft+until@2.1.0/node_modules/@open-draft/until/lib/index.mjs\nvar until = async (promise) => {\n  try {\n    const data = await promise().catch((error2) => {\n      throw error2;\n    });\n    return { error: null, data };\n  } catch (error2) {\n    return { error: error2, data: null };\n  }\n};\n\n// src/browser/setupWorker/start/utils/getWorkerInstance.ts\n\n\n// src/browser/utils/getAbsoluteWorkerUrl.ts\nfunction getAbsoluteWorkerUrl(workerUrl) {\n  return new URL(workerUrl, location.href).href;\n}\n\n// src/browser/setupWorker/start/utils/getWorkerByRegistration.ts\nfunction getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker) {\n  const allStates = [\n    registration.active,\n    registration.installing,\n    registration.waiting\n  ];\n  const relevantStates = allStates.filter((state) => {\n    return state != null;\n  });\n  const worker = relevantStates.find((worker2) => {\n    return findWorker(worker2.scriptURL, absoluteWorkerUrl);\n  });\n  return worker || null;\n}\n\n// src/browser/setupWorker/start/utils/getWorkerInstance.ts\nvar getWorkerInstance = async (url, options = {}, findWorker) => {\n  const absoluteWorkerUrl = getAbsoluteWorkerUrl(url);\n  const mockRegistrations = await navigator.serviceWorker.getRegistrations().then(\n    (registrations) => registrations.filter(\n      (registration) => getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker)\n    )\n  );\n  if (!navigator.serviceWorker.controller && mockRegistrations.length > 0) {\n    location.reload();\n  }\n  const [existingRegistration] = mockRegistrations;\n  if (existingRegistration) {\n    return existingRegistration.update().then(() => {\n      return [\n        getWorkerByRegistration(\n          existingRegistration,\n          absoluteWorkerUrl,\n          findWorker\n        ),\n        existingRegistration\n      ];\n    });\n  }\n  const registrationResult = await until(\n    async () => {\n      const registration = await navigator.serviceWorker.register(url, options);\n      return [\n        // Compare existing worker registration by its worker URL,\n        // to prevent irrelevant workers to resolve here (such as Codesandbox worker).\n        getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker),\n        registration\n      ];\n    }\n  );\n  if (registrationResult.error) {\n    const isWorkerMissing = registrationResult.error.message.includes(\"(404)\");\n    if (isWorkerMissing) {\n      const scopeUrl = new URL(options?.scope || \"/\", location.href);\n      throw new Error(\n        _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(`Failed to register a Service Worker for scope ('${scopeUrl.href}') with script ('${absoluteWorkerUrl}'): Service Worker script does not exist at the given path.\n\nDid you forget to run \"npx msw init <PUBLIC_DIR>\"?\n\nLearn more about creating the Service Worker script: https://mswjs.io/docs/cli/init`)\n      );\n    }\n    throw new Error(\n      _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(\n        \"Failed to register the Service Worker:\\n\\n%s\",\n        registrationResult.error.message\n      )\n    );\n  }\n  return registrationResult.data;\n};\n\n// src/browser/setupWorker/start/utils/enableMocking.ts\n\n\n// src/browser/setupWorker/start/utils/printStartMessage.ts\n\nfunction printStartMessage(args = {}) {\n  if (args.quiet) {\n    return;\n  }\n  const message = args.message || \"Mocking enabled.\";\n  console.groupCollapsed(\n    `%c${_core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(message)}`,\n    \"color:orangered;font-weight:bold;\"\n  );\n  console.log(\n    \"%cDocumentation: %chttps://mswjs.io/docs\",\n    \"font-weight:bold\",\n    \"font-weight:normal\"\n  );\n  console.log(\"Found an issue? https://github.com/mswjs/msw/issues\");\n  if (args.workerUrl) {\n    console.log(\"Worker script URL:\", args.workerUrl);\n  }\n  if (args.workerScope) {\n    console.log(\"Worker scope:\", args.workerScope);\n  }\n  console.groupEnd();\n}\n\n// src/browser/setupWorker/start/utils/enableMocking.ts\nasync function enableMocking(context, options) {\n  context.workerChannel.send(\"MOCK_ACTIVATE\");\n  await context.events.once(\"MOCKING_ENABLED\");\n  if (context.isMockingEnabled) {\n    _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.warn(\n      `Found a redundant \"worker.start()\" call. Note that starting the worker while mocking is already enabled will have no effect. Consider removing this \"worker.start()\" call.`\n    );\n    return;\n  }\n  context.isMockingEnabled = true;\n  printStartMessage({\n    quiet: options.quiet,\n    workerScope: context.registration?.scope,\n    workerUrl: context.worker?.scriptURL\n  });\n}\n\n// src/browser/setupWorker/start/utils/createMessageChannel.ts\nvar WorkerChannel = class {\n  constructor(port) {\n    this.port = port;\n  }\n  postMessage(event, ...rest) {\n    const [data, transfer] = rest;\n    this.port.postMessage({ type: event, data }, { transfer });\n  }\n};\n\n// src/browser/utils/pruneGetRequestBody.ts\nfunction pruneGetRequestBody(request) {\n  if ([\"HEAD\", \"GET\"].includes(request.method)) {\n    return void 0;\n  }\n  return request.body;\n}\n\n// src/browser/utils/parseWorkerRequest.ts\nfunction parseWorkerRequest(incomingRequest) {\n  return new Request(incomingRequest.url, {\n    ...incomingRequest,\n    body: pruneGetRequestBody(incomingRequest)\n  });\n}\n\n// src/browser/setupWorker/start/createRequestListener.ts\n\n\n\n\nvar createRequestListener = (context, options) => {\n  return async (event, message) => {\n    const messageChannel = new WorkerChannel(event.ports[0]);\n    const requestId = message.payload.id;\n    const request = parseWorkerRequest(message.payload);\n    const requestCloneForLogs = request.clone();\n    const requestClone = request.clone();\n    _core_handlers_RequestHandler_mjs__WEBPACK_IMPORTED_MODULE_1__.RequestHandler.cache.set(request, requestClone);\n    context.requests.set(requestId, requestClone);\n    try {\n      await (0,_core_utils_handleRequest_mjs__WEBPACK_IMPORTED_MODULE_2__.handleRequest)(\n        request,\n        requestId,\n        context.getRequestHandlers(),\n        options,\n        context.emitter,\n        {\n          onPassthroughResponse() {\n            messageChannel.postMessage(\"PASSTHROUGH\");\n          },\n          async onMockedResponse(response, { handler, parsedResult }) {\n            const responseClone = response.clone();\n            const responseCloneForLogs = response.clone();\n            const responseInit = (0,_core_utils_toResponseInit_mjs__WEBPACK_IMPORTED_MODULE_3__.toResponseInit)(response);\n            if (context.supports.readableStreamTransfer) {\n              const responseStreamOrNull = response.body;\n              messageChannel.postMessage(\n                \"MOCK_RESPONSE\",\n                {\n                  ...responseInit,\n                  body: responseStreamOrNull\n                },\n                responseStreamOrNull ? [responseStreamOrNull] : void 0\n              );\n            } else {\n              const responseBufferOrNull = response.body === null ? null : await responseClone.arrayBuffer();\n              messageChannel.postMessage(\"MOCK_RESPONSE\", {\n                ...responseInit,\n                body: responseBufferOrNull\n              });\n            }\n            if (!options.quiet) {\n              context.emitter.once(\"response:mocked\", () => {\n                handler.log({\n                  request: requestCloneForLogs,\n                  response: responseCloneForLogs,\n                  parsedResult\n                });\n              });\n            }\n          }\n        }\n      );\n    } catch (error2) {\n      if (error2 instanceof Error) {\n        _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.error(\n          `Uncaught exception in the request handler for \"%s %s\":\n\n%s\n\nThis exception has been gracefully handled as a 500 response, however, it's strongly recommended to resolve this error, as it indicates a mistake in your code. If you wish to mock an error response, please see this guide: https://mswjs.io/docs/recipes/mocking-error-responses`,\n          request.method,\n          request.url,\n          error2.stack ?? error2\n        );\n        messageChannel.postMessage(\"MOCK_RESPONSE\", {\n          status: 500,\n          statusText: \"Request Handler Error\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: error2.name,\n            message: error2.message,\n            stack: error2.stack\n          })\n        });\n      }\n    }\n  };\n};\n\n// src/browser/utils/checkWorkerIntegrity.ts\n\nasync function checkWorkerIntegrity(context) {\n  context.workerChannel.send(\"INTEGRITY_CHECK_REQUEST\");\n  const { payload } = await context.events.once(\"INTEGRITY_CHECK_RESPONSE\");\n  if (payload.checksum !== \"26357c79639bfa20d64c0efca2a87423\") {\n    _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.warn(\n      `The currently registered Service Worker has been generated by a different version of MSW (${payload.packageVersion}) and may not be fully compatible with the installed version.\n\nIt's recommended you update your worker script by running this command:\n\n  \\u2022 npx msw init <PUBLIC_DIR>\n\nYou can also automate this process and make the worker script update automatically upon the library installations. Read more: https://mswjs.io/docs/cli/init.`\n    );\n  }\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.26.14/node_modules/@mswjs/interceptors/lib/browser/chunk-UJZOJSMP.mjs\nvar encoder = new TextEncoder();\nfunction encodeBuffer(text) {\n  return encoder.encode(text);\n}\nfunction decodeBuffer(buffer, encoding) {\n  const decoder = new TextDecoder(encoding);\n  return decoder.decode(buffer);\n}\nfunction toArrayBuffer(array) {\n  return array.buffer.slice(\n    array.byteOffset,\n    array.byteOffset + array.byteLength\n  );\n}\nvar RESPONSE_STATUS_CODES_WITHOUT_BODY = /* @__PURE__ */ new Set([\n  101,\n  103,\n  204,\n  205,\n  304\n]);\nfunction isResponseWithoutBody(status) {\n  return RESPONSE_STATUS_CODES_WITHOUT_BODY.has(status);\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.26.14/node_modules/@mswjs/interceptors/lib/browser/chunk-HAGW22AN.mjs\nvar IS_PATCHED_MODULE = Symbol(\"isPatchedModule\");\n\n// node_modules/.pnpm/@open-draft+logger@0.3.0/node_modules/@open-draft/logger/lib/index.mjs\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar colors_exports = {};\n__export(colors_exports, {\n  blue: () => blue,\n  gray: () => gray,\n  green: () => green,\n  red: () => red,\n  yellow: () => yellow\n});\nfunction yellow(text) {\n  return `\\x1B[33m${text}\\x1B[0m`;\n}\nfunction blue(text) {\n  return `\\x1B[34m${text}\\x1B[0m`;\n}\nfunction gray(text) {\n  return `\\x1B[90m${text}\\x1B[0m`;\n}\nfunction red(text) {\n  return `\\x1B[31m${text}\\x1B[0m`;\n}\nfunction green(text) {\n  return `\\x1B[32m${text}\\x1B[0m`;\n}\nvar IS_NODE = isNodeProcess();\nvar Logger = class {\n  constructor(name) {\n    this.name = name;\n    this.prefix = `[${this.name}]`;\n    const LOGGER_NAME = getVariable(\"DEBUG\");\n    const LOGGER_LEVEL = getVariable(\"LOG_LEVEL\");\n    const isLoggingEnabled = LOGGER_NAME === \"1\" || LOGGER_NAME === \"true\" || typeof LOGGER_NAME !== \"undefined\" && this.name.startsWith(LOGGER_NAME);\n    if (isLoggingEnabled) {\n      this.debug = isDefinedAndNotEquals(LOGGER_LEVEL, \"debug\") ? noop : this.debug;\n      this.info = isDefinedAndNotEquals(LOGGER_LEVEL, \"info\") ? noop : this.info;\n      this.success = isDefinedAndNotEquals(LOGGER_LEVEL, \"success\") ? noop : this.success;\n      this.warning = isDefinedAndNotEquals(LOGGER_LEVEL, \"warning\") ? noop : this.warning;\n      this.error = isDefinedAndNotEquals(LOGGER_LEVEL, \"error\") ? noop : this.error;\n    } else {\n      this.info = noop;\n      this.success = noop;\n      this.warning = noop;\n      this.error = noop;\n      this.only = noop;\n    }\n  }\n  prefix;\n  extend(domain) {\n    return new Logger(`${this.name}:${domain}`);\n  }\n  /**\n   * Print a debug message.\n   * @example\n   * logger.debug('no duplicates found, creating a document...')\n   */\n  debug(message, ...positionals) {\n    this.logEntry({\n      level: \"debug\",\n      message: gray(message),\n      positionals,\n      prefix: this.prefix,\n      colors: {\n        prefix: \"gray\"\n      }\n    });\n  }\n  /**\n   * Print an info message.\n   * @example\n   * logger.info('start parsing...')\n   */\n  info(message, ...positionals) {\n    this.logEntry({\n      level: \"info\",\n      message,\n      positionals,\n      prefix: this.prefix,\n      colors: {\n        prefix: \"blue\"\n      }\n    });\n    const performance2 = new PerformanceEntry();\n    return (message2, ...positionals2) => {\n      performance2.measure();\n      this.logEntry({\n        level: \"info\",\n        message: `${message2} ${gray(`${performance2.deltaTime}ms`)}`,\n        positionals: positionals2,\n        prefix: this.prefix,\n        colors: {\n          prefix: \"blue\"\n        }\n      });\n    };\n  }\n  /**\n   * Print a success message.\n   * @example\n   * logger.success('successfully created document')\n   */\n  success(message, ...positionals) {\n    this.logEntry({\n      level: \"info\",\n      message,\n      positionals,\n      prefix: `\\u2714 ${this.prefix}`,\n      colors: {\n        timestamp: \"green\",\n        prefix: \"green\"\n      }\n    });\n  }\n  /**\n   * Print a warning.\n   * @example\n   * logger.warning('found legacy document format')\n   */\n  warning(message, ...positionals) {\n    this.logEntry({\n      level: \"warning\",\n      message,\n      positionals,\n      prefix: `\\u26A0 ${this.prefix}`,\n      colors: {\n        timestamp: \"yellow\",\n        prefix: \"yellow\"\n      }\n    });\n  }\n  /**\n   * Print an error message.\n   * @example\n   * logger.error('something went wrong')\n   */\n  error(message, ...positionals) {\n    this.logEntry({\n      level: \"error\",\n      message,\n      positionals,\n      prefix: `\\u2716 ${this.prefix}`,\n      colors: {\n        timestamp: \"red\",\n        prefix: \"red\"\n      }\n    });\n  }\n  /**\n   * Execute the given callback only when the logging is enabled.\n   * This is skipped in its entirety and has no runtime cost otherwise.\n   * This executes regardless of the log level.\n   * @example\n   * logger.only(() => {\n   *   logger.info('additional info')\n   * })\n   */\n  only(callback) {\n    callback();\n  }\n  createEntry(level, message) {\n    return {\n      timestamp: /* @__PURE__ */ new Date(),\n      level,\n      message\n    };\n  }\n  logEntry(args) {\n    const {\n      level,\n      message,\n      prefix,\n      colors: customColors,\n      positionals = []\n    } = args;\n    const entry = this.createEntry(level, message);\n    const timestampColor = customColors?.timestamp || \"gray\";\n    const prefixColor = customColors?.prefix || \"gray\";\n    const colorize = {\n      timestamp: colors_exports[timestampColor],\n      prefix: colors_exports[prefixColor]\n    };\n    const write = this.getWriter(level);\n    write(\n      [colorize.timestamp(this.formatTimestamp(entry.timestamp))].concat(prefix != null ? colorize.prefix(prefix) : []).concat(serializeInput(message)).join(\" \"),\n      ...positionals.map(serializeInput)\n    );\n  }\n  formatTimestamp(timestamp) {\n    return `${timestamp.toLocaleTimeString(\n      \"en-GB\"\n    )}:${timestamp.getMilliseconds()}`;\n  }\n  getWriter(level) {\n    switch (level) {\n      case \"debug\":\n      case \"success\":\n      case \"info\": {\n        return log;\n      }\n      case \"warning\": {\n        return warn;\n      }\n      case \"error\": {\n        return error;\n      }\n    }\n  }\n};\nvar PerformanceEntry = class {\n  startTime;\n  endTime;\n  deltaTime;\n  constructor() {\n    this.startTime = performance.now();\n  }\n  measure() {\n    this.endTime = performance.now();\n    const deltaTime = this.endTime - this.startTime;\n    this.deltaTime = deltaTime.toFixed(2);\n  }\n};\nvar noop = () => void 0;\nfunction log(message, ...positionals) {\n  if (IS_NODE) {\n    process.stdout.write(format(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.log(message, ...positionals);\n}\nfunction warn(message, ...positionals) {\n  if (IS_NODE) {\n    process.stderr.write(format(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.warn(message, ...positionals);\n}\nfunction error(message, ...positionals) {\n  if (IS_NODE) {\n    process.stderr.write(format(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.error(message, ...positionals);\n}\nfunction getVariable(variableName) {\n  if (IS_NODE) {\n    return \"MISSING_ENV_VAR\"[variableName];\n  }\n  return globalThis[variableName]?.toString();\n}\nfunction isDefinedAndNotEquals(value, expected) {\n  return value !== void 0 && value !== expected;\n}\nfunction serializeInput(message) {\n  if (typeof message === \"undefined\") {\n    return \"undefined\";\n  }\n  if (message === null) {\n    return \"null\";\n  }\n  if (typeof message === \"string\") {\n    return message;\n  }\n  if (typeof message === \"object\") {\n    return JSON.stringify(message);\n  }\n  return message.toString();\n}\n\n// node_modules/.pnpm/strict-event-emitter@0.5.1/node_modules/strict-event-emitter/lib/index.mjs\nvar MemoryLeakError = class extends Error {\n  constructor(emitter, type, count) {\n    super(\n      `Possible EventEmitter memory leak detected. ${count} ${type.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`\n    );\n    this.emitter = emitter;\n    this.type = type;\n    this.count = count;\n    this.name = \"MaxListenersExceededWarning\";\n  }\n};\nvar _Emitter = class {\n  static listenerCount(emitter, eventName) {\n    return emitter.listenerCount(eventName);\n  }\n  constructor() {\n    this.events = /* @__PURE__ */ new Map();\n    this.maxListeners = _Emitter.defaultMaxListeners;\n    this.hasWarnedAboutPotentialMemoryLeak = false;\n  }\n  _emitInternalEvent(internalEventName, eventName, listener) {\n    this.emit(\n      internalEventName,\n      ...[eventName, listener]\n    );\n  }\n  _getListeners(eventName) {\n    return Array.prototype.concat.apply([], this.events.get(eventName)) || [];\n  }\n  _removeListener(listeners, listener) {\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n    return [];\n  }\n  _wrapOnceListener(eventName, listener) {\n    const onceListener = (...data) => {\n      this.removeListener(eventName, onceListener);\n      return listener.apply(this, data);\n    };\n    Object.defineProperty(onceListener, \"name\", { value: listener.name });\n    return onceListener;\n  }\n  setMaxListeners(maxListeners) {\n    this.maxListeners = maxListeners;\n    return this;\n  }\n  /**\n   * Returns the current max listener value for the `Emitter` which is\n   * either set by `emitter.setMaxListeners(n)` or defaults to\n   * `Emitter.defaultMaxListeners`.\n   */\n  getMaxListeners() {\n    return this.maxListeners;\n  }\n  /**\n   * Returns an array listing the events for which the emitter has registered listeners.\n   * The values in the array will be strings or Symbols.\n   */\n  eventNames() {\n    return Array.from(this.events.keys());\n  }\n  /**\n   * Synchronously calls each of the listeners registered for the event named `eventName`,\n   * in the order they were registered, passing the supplied arguments to each.\n   * Returns `true` if the event has listeners, `false` otherwise.\n   *\n   * @example\n   * const emitter = new Emitter<{ hello: [string] }>()\n   * emitter.emit('hello', 'John')\n   */\n  emit(eventName, ...data) {\n    const listeners = this._getListeners(eventName);\n    listeners.forEach((listener) => {\n      listener.apply(this, data);\n    });\n    return listeners.length > 0;\n  }\n  addListener(eventName, listener) {\n    this._emitInternalEvent(\"newListener\", eventName, listener);\n    const nextListeners = this._getListeners(eventName).concat(listener);\n    this.events.set(eventName, nextListeners);\n    if (this.maxListeners > 0 && this.listenerCount(eventName) > this.maxListeners && !this.hasWarnedAboutPotentialMemoryLeak) {\n      this.hasWarnedAboutPotentialMemoryLeak = true;\n      const memoryLeakWarning = new MemoryLeakError(\n        this,\n        eventName,\n        this.listenerCount(eventName)\n      );\n      console.warn(memoryLeakWarning);\n    }\n    return this;\n  }\n  on(eventName, listener) {\n    return this.addListener(eventName, listener);\n  }\n  once(eventName, listener) {\n    return this.addListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  prependListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      const nextListeners = [listener].concat(listeners);\n      this.events.set(eventName, nextListeners);\n    } else {\n      this.events.set(eventName, listeners.concat(listener));\n    }\n    return this;\n  }\n  prependOnceListener(eventName, listener) {\n    return this.prependListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  removeListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      this._removeListener(listeners, listener);\n      this.events.set(eventName, listeners);\n      this._emitInternalEvent(\"removeListener\", eventName, listener);\n    }\n    return this;\n  }\n  /**\n   * Alias for `emitter.removeListener()`.\n   *\n   * @example\n   * emitter.off('hello', listener)\n   */\n  off(eventName, listener) {\n    return this.removeListener(eventName, listener);\n  }\n  removeAllListeners(eventName) {\n    if (eventName) {\n      this.events.delete(eventName);\n    } else {\n      this.events.clear();\n    }\n    return this;\n  }\n  /**\n   * Returns a copy of the array of listeners for the event named `eventName`.\n   */\n  listeners(eventName) {\n    return Array.from(this._getListeners(eventName));\n  }\n  /**\n   * Returns the number of listeners listening to the event named `eventName`.\n   */\n  listenerCount(eventName) {\n    return this._getListeners(eventName).length;\n  }\n  rawListeners(eventName) {\n    return this.listeners(eventName);\n  }\n};\nvar Emitter = _Emitter;\nEmitter.defaultMaxListeners = 10;\n\n// node_modules/.pnpm/@mswjs+interceptors@0.26.14/node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs\nvar INTERNAL_REQUEST_ID_HEADER_NAME = \"x-interceptors-internal-request-id\";\nfunction getGlobalSymbol(symbol) {\n  return (\n    // @ts-ignore https://github.com/Microsoft/TypeScript/issues/24587\n    globalThis[symbol] || void 0\n  );\n}\nfunction setGlobalSymbol(symbol, value) {\n  globalThis[symbol] = value;\n}\nfunction deleteGlobalSymbol(symbol) {\n  delete globalThis[symbol];\n}\nvar Interceptor = class {\n  constructor(symbol) {\n    this.symbol = symbol;\n    this.readyState = \"INACTIVE\";\n    this.emitter = new Emitter();\n    this.subscriptions = [];\n    this.logger = new Logger(symbol.description);\n    this.emitter.setMaxListeners(0);\n    this.logger.info(\"constructing the interceptor...\");\n  }\n  /**\n   * Determine if this interceptor can be applied\n   * in the current environment.\n   */\n  checkEnvironment() {\n    return true;\n  }\n  /**\n   * Apply this interceptor to the current process.\n   * Returns an already running interceptor instance if it's present.\n   */\n  apply() {\n    const logger = this.logger.extend(\"apply\");\n    logger.info(\"applying the interceptor...\");\n    if (this.readyState === \"APPLIED\") {\n      logger.info(\"intercepted already applied!\");\n      return;\n    }\n    const shouldApply = this.checkEnvironment();\n    if (!shouldApply) {\n      logger.info(\"the interceptor cannot be applied in this environment!\");\n      return;\n    }\n    this.readyState = \"APPLYING\";\n    const runningInstance = this.getInstance();\n    if (runningInstance) {\n      logger.info(\"found a running instance, reusing...\");\n      this.on = (event, listener) => {\n        logger.info('proxying the \"%s\" listener', event);\n        runningInstance.emitter.addListener(event, listener);\n        this.subscriptions.push(() => {\n          runningInstance.emitter.removeListener(event, listener);\n          logger.info('removed proxied \"%s\" listener!', event);\n        });\n        return this;\n      };\n      this.readyState = \"APPLIED\";\n      return;\n    }\n    logger.info(\"no running instance found, setting up a new instance...\");\n    this.setup();\n    this.setInstance();\n    this.readyState = \"APPLIED\";\n  }\n  /**\n   * Setup the module augments and stubs necessary for this interceptor.\n   * This method is not run if there's a running interceptor instance\n   * to prevent instantiating an interceptor multiple times.\n   */\n  setup() {\n  }\n  /**\n   * Listen to the interceptor's public events.\n   */\n  on(event, listener) {\n    const logger = this.logger.extend(\"on\");\n    if (this.readyState === \"DISPOSING\" || this.readyState === \"DISPOSED\") {\n      logger.info(\"cannot listen to events, already disposed!\");\n      return this;\n    }\n    logger.info('adding \"%s\" event listener:', event, listener);\n    this.emitter.on(event, listener);\n    return this;\n  }\n  once(event, listener) {\n    this.emitter.once(event, listener);\n    return this;\n  }\n  off(event, listener) {\n    this.emitter.off(event, listener);\n    return this;\n  }\n  removeAllListeners(event) {\n    this.emitter.removeAllListeners(event);\n    return this;\n  }\n  /**\n   * Disposes of any side-effects this interceptor has introduced.\n   */\n  dispose() {\n    const logger = this.logger.extend(\"dispose\");\n    if (this.readyState === \"DISPOSED\") {\n      logger.info(\"cannot dispose, already disposed!\");\n      return;\n    }\n    logger.info(\"disposing the interceptor...\");\n    this.readyState = \"DISPOSING\";\n    if (!this.getInstance()) {\n      logger.info(\"no interceptors running, skipping dispose...\");\n      return;\n    }\n    this.clearInstance();\n    logger.info(\"global symbol deleted:\", getGlobalSymbol(this.symbol));\n    if (this.subscriptions.length > 0) {\n      logger.info(\"disposing of %d subscriptions...\", this.subscriptions.length);\n      for (const dispose of this.subscriptions) {\n        dispose();\n      }\n      this.subscriptions = [];\n      logger.info(\"disposed of all subscriptions!\", this.subscriptions.length);\n    }\n    this.emitter.removeAllListeners();\n    logger.info(\"destroyed the listener!\");\n    this.readyState = \"DISPOSED\";\n  }\n  getInstance() {\n    var _a;\n    const instance = getGlobalSymbol(this.symbol);\n    this.logger.info(\"retrieved global instance:\", (_a = instance == null ? void 0 : instance.constructor) == null ? void 0 : _a.name);\n    return instance;\n  }\n  setInstance() {\n    setGlobalSymbol(this.symbol, this);\n    this.logger.info(\"set global instance!\", this.symbol.description);\n  }\n  clearInstance() {\n    deleteGlobalSymbol(this.symbol);\n    this.logger.info(\"cleared global instance!\", this.symbol.description);\n  }\n};\nfunction createRequestId() {\n  return Math.random().toString(16).slice(2);\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.26.14/node_modules/@mswjs/interceptors/lib/browser/index.mjs\nvar BatchInterceptor = class extends Interceptor {\n  constructor(options) {\n    BatchInterceptor.symbol = Symbol(options.name);\n    super(BatchInterceptor.symbol);\n    this.interceptors = options.interceptors;\n  }\n  setup() {\n    const logger = this.logger.extend(\"setup\");\n    logger.info(\"applying all %d interceptors...\", this.interceptors.length);\n    for (const interceptor of this.interceptors) {\n      logger.info('applying \"%s\" interceptor...', interceptor.constructor.name);\n      interceptor.apply();\n      logger.info(\"adding interceptor dispose subscription\");\n      this.subscriptions.push(() => interceptor.dispose());\n    }\n  }\n  on(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.on(event, listener);\n    }\n    return this;\n  }\n  once(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.once(event, listener);\n    }\n    return this;\n  }\n  off(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.off(event, listener);\n    }\n    return this;\n  }\n  removeAllListeners(event) {\n    for (const interceptors of this.interceptors) {\n      interceptors.removeAllListeners(event);\n    }\n    return this;\n  }\n};\n\n// src/browser/setupWorker/start/createResponseListener.ts\nfunction createResponseListener(context) {\n  return (_, message) => {\n    const { payload: responseJson } = message;\n    const { requestId } = responseJson;\n    const request = context.requests.get(requestId);\n    context.requests.delete(requestId);\n    if (responseJson.type?.includes(\"opaque\")) {\n      return;\n    }\n    const response = responseJson.status === 0 ? Response.error() : new Response(\n      /**\n       * Responses may be streams here, but when we create a response object\n       * with null-body status codes, like 204, 205, 304 Response will\n       * throw when passed a non-null body, so ensure it's null here\n       * for those codes\n       */\n      isResponseWithoutBody(responseJson.status) ? null : responseJson.body,\n      responseJson\n    );\n    if (!response.url) {\n      Object.defineProperty(response, \"url\", {\n        value: request.url,\n        enumerable: true,\n        writable: false\n      });\n    }\n    context.emitter.emit(\n      responseJson.isMockedResponse ? \"response:mocked\" : \"response:bypass\",\n      {\n        response,\n        request,\n        requestId: responseJson.requestId\n      }\n    );\n  };\n}\n\n// src/browser/setupWorker/start/utils/validateWorkerScope.ts\n\nfunction validateWorkerScope(registration, options) {\n  if (!options?.quiet && !location.href.startsWith(registration.scope)) {\n    _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.warn(\n      `Cannot intercept requests on this page because it's outside of the worker's scope (\"${registration.scope}\"). If you wish to mock API requests on this page, you must resolve this scope issue.\n\n- (Recommended) Register the worker at the root level (\"/\") of your application.\n- Set the \"Service-Worker-Allowed\" response header to allow out-of-scope workers.`\n    );\n  }\n}\n\n// src/browser/setupWorker/start/createStartHandler.ts\nvar createStartHandler = (context) => {\n  return function start(options, customOptions) {\n    const startWorkerInstance = async () => {\n      context.events.removeAllListeners();\n      context.workerChannel.on(\n        \"REQUEST\",\n        createRequestListener(context, options)\n      );\n      context.workerChannel.on(\"RESPONSE\", createResponseListener(context));\n      const instance = await getWorkerInstance(\n        options.serviceWorker.url,\n        options.serviceWorker.options,\n        options.findWorker\n      );\n      const [worker, registration] = instance;\n      if (!worker) {\n        const missingWorkerMessage = customOptions?.findWorker ? _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(\n          `Failed to locate the Service Worker registration using a custom \"findWorker\" predicate.\n\nPlease ensure that the custom predicate properly locates the Service Worker registration at \"%s\".\nMore details: https://mswjs.io/docs/api/setup-worker/start#findworker\n`,\n          options.serviceWorker.url\n        ) : _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(\n          `Failed to locate the Service Worker registration.\n\nThis most likely means that the worker script URL \"%s\" cannot resolve against the actual public hostname (%s). This may happen if your application runs behind a proxy, or has a dynamic hostname.\n\nPlease consider using a custom \"serviceWorker.url\" option to point to the actual worker script location, or a custom \"findWorker\" option to resolve the Service Worker registration manually. More details: https://mswjs.io/docs/api/setup-worker/start`,\n          options.serviceWorker.url,\n          location.host\n        );\n        throw new Error(missingWorkerMessage);\n      }\n      context.worker = worker;\n      context.registration = registration;\n      context.events.addListener(window, \"beforeunload\", () => {\n        if (worker.state !== \"redundant\") {\n          context.workerChannel.send(\"CLIENT_CLOSED\");\n        }\n        window.clearInterval(context.keepAliveInterval);\n      });\n      await checkWorkerIntegrity(context).catch((error2) => {\n        _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.error(\n          \"Error while checking the worker script integrity. Please report this on GitHub (https://github.com/mswjs/msw/issues), including the original error below.\"\n        );\n        console.error(error2);\n      });\n      context.keepAliveInterval = window.setInterval(\n        () => context.workerChannel.send(\"KEEPALIVE_REQUEST\"),\n        5e3\n      );\n      validateWorkerScope(registration, context.startOptions);\n      return registration;\n    };\n    const workerRegistration = startWorkerInstance().then(\n      async (registration) => {\n        const pendingInstance = registration.installing || registration.waiting;\n        if (pendingInstance) {\n          await new Promise((resolve) => {\n            pendingInstance.addEventListener(\"statechange\", () => {\n              if (pendingInstance.state === \"activated\") {\n                return resolve();\n              }\n            });\n          });\n        }\n        await enableMocking(context, options).catch((error2) => {\n          throw new Error(`Failed to enable mocking: ${error2?.message}`);\n        });\n        return registration;\n      }\n    );\n    return workerRegistration;\n  };\n};\n\n// src/browser/setupWorker/stop/createStop.ts\n\n\n// src/browser/setupWorker/stop/utils/printStopMessage.ts\n\nfunction printStopMessage(args = {}) {\n  if (args.quiet) {\n    return;\n  }\n  console.log(\n    `%c${_core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(\"Mocking disabled.\")}`,\n    \"color:orangered;font-weight:bold;\"\n  );\n}\n\n// src/browser/setupWorker/stop/createStop.ts\nvar createStop = (context) => {\n  return function stop() {\n    if (!context.isMockingEnabled) {\n      _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.warn(\n        'Found a redundant \"worker.stop()\" call. Note that stopping the worker while mocking already stopped has no effect. Consider removing this \"worker.stop()\" call.'\n      );\n      return;\n    }\n    context.workerChannel.send(\"MOCK_DEACTIVATE\");\n    context.isMockingEnabled = false;\n    window.clearInterval(context.keepAliveInterval);\n    printStopMessage({ quiet: context.startOptions?.quiet });\n  };\n};\n\n// src/browser/setupWorker/start/utils/prepareStartHandler.ts\n\nvar DEFAULT_START_OPTIONS = {\n  serviceWorker: {\n    url: \"/mockServiceWorker.js\",\n    options: null\n  },\n  quiet: false,\n  waitUntilReady: true,\n  onUnhandledRequest: \"warn\",\n  findWorker(scriptURL, mockServiceWorkerUrl) {\n    return scriptURL === mockServiceWorkerUrl;\n  }\n};\n\n// node_modules/.pnpm/@open-draft+deferred-promise@2.2.0/node_modules/@open-draft/deferred-promise/build/index.mjs\nfunction createDeferredExecutor() {\n  const executor = (resolve, reject) => {\n    executor.state = \"pending\";\n    executor.resolve = (data) => {\n      if (executor.state !== \"pending\") {\n        return;\n      }\n      executor.result = data;\n      const onFulfilled = (value) => {\n        executor.state = \"fulfilled\";\n        return value;\n      };\n      return resolve(\n        data instanceof Promise ? data : Promise.resolve(data).then(onFulfilled)\n      );\n    };\n    executor.reject = (reason) => {\n      if (executor.state !== \"pending\") {\n        return;\n      }\n      queueMicrotask(() => {\n        executor.state = \"rejected\";\n      });\n      return reject(executor.rejectionReason = reason);\n    };\n  };\n  return executor;\n}\nvar DeferredPromise = class extends Promise {\n  #executor;\n  resolve;\n  reject;\n  constructor(executor = null) {\n    const deferredExecutor = createDeferredExecutor();\n    super((originalResolve, originalReject) => {\n      deferredExecutor(originalResolve, originalReject);\n      executor?.(deferredExecutor.resolve, deferredExecutor.reject);\n    });\n    this.#executor = deferredExecutor;\n    this.resolve = this.#executor.resolve;\n    this.reject = this.#executor.reject;\n  }\n  get state() {\n    return this.#executor.state;\n  }\n  get rejectionReason() {\n    return this.#executor.rejectionReason;\n  }\n  then(onFulfilled, onRejected) {\n    return this.#decorate(super.then(onFulfilled, onRejected));\n  }\n  catch(onRejected) {\n    return this.#decorate(super.catch(onRejected));\n  }\n  finally(onfinally) {\n    return this.#decorate(super.finally(onfinally));\n  }\n  #decorate(promise) {\n    return Object.defineProperties(promise, {\n      resolve: { configurable: true, value: this.resolve },\n      reject: { configurable: true, value: this.reject }\n    });\n  }\n};\n\n// node_modules/.pnpm/@mswjs+interceptors@0.26.14/node_modules/@mswjs/interceptors/lib/browser/chunk-OUWBQF3Z.mjs\nvar RequestController = class {\n  constructor(request) {\n    this.request = request;\n    this.responsePromise = new DeferredPromise();\n  }\n  respondWith(response) {\n    invariant(\n      this.responsePromise.state === \"pending\",\n      'Failed to respond to \"%s %s\" request: the \"request\" event has already been responded to.',\n      this.request.method,\n      this.request.url\n    );\n    this.responsePromise.resolve(response);\n  }\n};\nfunction toInteractiveRequest(request) {\n  const requestController = new RequestController(request);\n  Reflect.set(\n    request,\n    \"respondWith\",\n    requestController.respondWith.bind(requestController)\n  );\n  return {\n    interactiveRequest: request,\n    requestController\n  };\n}\nasync function emitAsync(emitter, eventName, ...data) {\n  const listners = emitter.listeners(eventName);\n  if (listners.length === 0) {\n    return;\n  }\n  for (const listener of listners) {\n    await listener.apply(emitter, data);\n  }\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.26.14/node_modules/@mswjs/interceptors/lib/browser/chunk-3FNUI33J.mjs\nfunction isPropertyAccessible(obj, key) {\n  try {\n    obj[key];\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction canParseUrl(url) {\n  try {\n    new URL(url);\n    return true;\n  } catch (_error) {\n    return false;\n  }\n}\nvar _FetchInterceptor = class extends Interceptor {\n  constructor() {\n    super(_FetchInterceptor.symbol);\n  }\n  checkEnvironment() {\n    return typeof globalThis !== \"undefined\" && typeof globalThis.fetch !== \"undefined\";\n  }\n  async setup() {\n    const pureFetch = globalThis.fetch;\n    invariant(\n      !pureFetch[IS_PATCHED_MODULE],\n      'Failed to patch the \"fetch\" module: already patched.'\n    );\n    globalThis.fetch = async (input, init) => {\n      var _a;\n      const requestId = createRequestId();\n      const resolvedInput = typeof input === \"string\" && typeof location !== \"undefined\" && !canParseUrl(input) ? new URL(input, location.origin) : input;\n      const request = new Request(resolvedInput, init);\n      this.logger.info(\"[%s] %s\", request.method, request.url);\n      const { interactiveRequest, requestController } = toInteractiveRequest(request);\n      this.logger.info(\n        'emitting the \"request\" event for %d listener(s)...',\n        this.emitter.listenerCount(\"request\")\n      );\n      this.emitter.once(\"request\", ({ requestId: pendingRequestId }) => {\n        if (pendingRequestId !== requestId) {\n          return;\n        }\n        if (requestController.responsePromise.state === \"pending\") {\n          requestController.responsePromise.resolve(void 0);\n        }\n      });\n      this.logger.info(\"awaiting for the mocked response...\");\n      const signal = interactiveRequest.signal;\n      const requestAborted = new DeferredPromise();\n      if (signal) {\n        signal.addEventListener(\n          \"abort\",\n          () => {\n            requestAborted.reject(signal.reason);\n          },\n          { once: true }\n        );\n      }\n      const resolverResult = await until(async () => {\n        const listenersFinished = emitAsync(this.emitter, \"request\", {\n          request: interactiveRequest,\n          requestId\n        });\n        await Promise.race([\n          requestAborted,\n          // Put the listeners invocation Promise in the same race condition\n          // with the request abort Promise because otherwise awaiting the listeners\n          // would always yield some response (or undefined).\n          listenersFinished,\n          requestController.responsePromise\n        ]);\n        this.logger.info(\"all request listeners have been resolved!\");\n        const mockedResponse2 = await requestController.responsePromise;\n        this.logger.info(\"event.respondWith called with:\", mockedResponse2);\n        return mockedResponse2;\n      });\n      if (requestAborted.state === \"rejected\") {\n        return Promise.reject(requestAborted.rejectionReason);\n      }\n      if (resolverResult.error) {\n        return Promise.reject(createNetworkError(resolverResult.error));\n      }\n      const mockedResponse = resolverResult.data;\n      if (mockedResponse && !((_a = request.signal) == null ? void 0 : _a.aborted)) {\n        this.logger.info(\"received mocked response:\", mockedResponse);\n        if (isPropertyAccessible(mockedResponse, \"type\") && mockedResponse.type === \"error\") {\n          this.logger.info(\n            \"received a network error response, rejecting the request promise...\"\n          );\n          return Promise.reject(createNetworkError(mockedResponse));\n        }\n        const responseClone = mockedResponse.clone();\n        this.emitter.emit(\"response\", {\n          response: responseClone,\n          isMockedResponse: true,\n          request: interactiveRequest,\n          requestId\n        });\n        Object.defineProperty(mockedResponse, \"url\", {\n          writable: false,\n          enumerable: true,\n          configurable: false,\n          value: request.url\n        });\n        return mockedResponse;\n      }\n      this.logger.info(\"no mocked response received!\");\n      return pureFetch(request).then((response) => {\n        const responseClone = response.clone();\n        this.logger.info(\"original fetch performed\", responseClone);\n        this.emitter.emit(\"response\", {\n          response: responseClone,\n          isMockedResponse: false,\n          request: interactiveRequest,\n          requestId\n        });\n        return response;\n      });\n    };\n    Object.defineProperty(globalThis.fetch, IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true\n    });\n    this.subscriptions.push(() => {\n      Object.defineProperty(globalThis.fetch, IS_PATCHED_MODULE, {\n        value: void 0\n      });\n      globalThis.fetch = pureFetch;\n      this.logger.info(\n        'restored native \"globalThis.fetch\"!',\n        globalThis.fetch.name\n      );\n    });\n  }\n};\nvar FetchInterceptor = _FetchInterceptor;\nFetchInterceptor.symbol = Symbol(\"fetch\");\nfunction createNetworkError(cause) {\n  return Object.assign(new TypeError(\"Failed to fetch\"), {\n    cause\n  });\n}\n\n// node_modules/.pnpm/@mswjs+interceptors@0.26.14/node_modules/@mswjs/interceptors/lib/browser/chunk-VYFS2IF2.mjs\nfunction concatArrayBuffer(left, right) {\n  const result = new Uint8Array(left.byteLength + right.byteLength);\n  result.set(left, 0);\n  result.set(right, left.byteLength);\n  return result;\n}\nvar EventPolyfill = class {\n  constructor(type, options) {\n    this.AT_TARGET = 0;\n    this.BUBBLING_PHASE = 0;\n    this.CAPTURING_PHASE = 0;\n    this.NONE = 0;\n    this.type = \"\";\n    this.srcElement = null;\n    this.currentTarget = null;\n    this.eventPhase = 0;\n    this.isTrusted = true;\n    this.composed = false;\n    this.cancelable = true;\n    this.defaultPrevented = false;\n    this.bubbles = true;\n    this.lengthComputable = true;\n    this.loaded = 0;\n    this.total = 0;\n    this.cancelBubble = false;\n    this.returnValue = true;\n    this.type = type;\n    this.target = (options == null ? void 0 : options.target) || null;\n    this.currentTarget = (options == null ? void 0 : options.currentTarget) || null;\n    this.timeStamp = Date.now();\n  }\n  composedPath() {\n    return [];\n  }\n  initEvent(type, bubbles, cancelable) {\n    this.type = type;\n    this.bubbles = !!bubbles;\n    this.cancelable = !!cancelable;\n  }\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n  stopPropagation() {\n  }\n  stopImmediatePropagation() {\n  }\n};\nvar ProgressEventPolyfill = class extends EventPolyfill {\n  constructor(type, init) {\n    super(type);\n    this.lengthComputable = (init == null ? void 0 : init.lengthComputable) || false;\n    this.composed = (init == null ? void 0 : init.composed) || false;\n    this.loaded = (init == null ? void 0 : init.loaded) || 0;\n    this.total = (init == null ? void 0 : init.total) || 0;\n  }\n};\nvar SUPPORTS_PROGRESS_EVENT = typeof ProgressEvent !== \"undefined\";\nfunction createEvent(target, type, init) {\n  const progressEvents = [\n    \"error\",\n    \"progress\",\n    \"loadstart\",\n    \"loadend\",\n    \"load\",\n    \"timeout\",\n    \"abort\"\n  ];\n  const ProgressEventClass = SUPPORTS_PROGRESS_EVENT ? ProgressEvent : ProgressEventPolyfill;\n  const event = progressEvents.includes(type) ? new ProgressEventClass(type, {\n    lengthComputable: true,\n    loaded: (init == null ? void 0 : init.loaded) || 0,\n    total: (init == null ? void 0 : init.total) || 0\n  }) : new EventPolyfill(type, {\n    target,\n    currentTarget: target\n  });\n  return event;\n}\nfunction findPropertySource(target, propertyName) {\n  if (!(propertyName in target)) {\n    return null;\n  }\n  const hasProperty = Object.prototype.hasOwnProperty.call(target, propertyName);\n  if (hasProperty) {\n    return target;\n  }\n  const prototype = Reflect.getPrototypeOf(target);\n  return prototype ? findPropertySource(prototype, propertyName) : null;\n}\nfunction createProxy(target, options) {\n  const proxy = new Proxy(target, optionsToProxyHandler(options));\n  return proxy;\n}\nfunction optionsToProxyHandler(options) {\n  const { constructorCall, methodCall, getProperty, setProperty } = options;\n  const handler = {};\n  if (typeof constructorCall !== \"undefined\") {\n    handler.construct = function(target, args, newTarget) {\n      const next = Reflect.construct.bind(null, target, args, newTarget);\n      return constructorCall.call(newTarget, args, next);\n    };\n  }\n  handler.set = function(target, propertyName, nextValue) {\n    const next = () => {\n      const propertySource = findPropertySource(target, propertyName) || target;\n      const ownDescriptors = Reflect.getOwnPropertyDescriptor(\n        propertySource,\n        propertyName\n      );\n      if (typeof (ownDescriptors == null ? void 0 : ownDescriptors.set) !== \"undefined\") {\n        ownDescriptors.set.apply(target, [nextValue]);\n        return true;\n      }\n      return Reflect.defineProperty(propertySource, propertyName, {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: nextValue\n      });\n    };\n    if (typeof setProperty !== \"undefined\") {\n      return setProperty.call(target, [propertyName, nextValue], next);\n    }\n    return next();\n  };\n  handler.get = function(target, propertyName, receiver) {\n    const next = () => target[propertyName];\n    const value = typeof getProperty !== \"undefined\" ? getProperty.call(target, [propertyName, receiver], next) : next();\n    if (typeof value === \"function\") {\n      return (...args) => {\n        const next2 = value.bind(target, ...args);\n        if (typeof methodCall !== \"undefined\") {\n          return methodCall.call(target, [propertyName, args], next2);\n        }\n        return next2();\n      };\n    }\n    return value;\n  };\n  return handler;\n}\nfunction isDomParserSupportedType(type) {\n  const supportedTypes = [\n    \"application/xhtml+xml\",\n    \"application/xml\",\n    \"image/svg+xml\",\n    \"text/html\",\n    \"text/xml\"\n  ];\n  return supportedTypes.some((supportedType) => {\n    return type.startsWith(supportedType);\n  });\n}\nfunction parseJson(data) {\n  try {\n    const json = JSON.parse(data);\n    return json;\n  } catch (_) {\n    return null;\n  }\n}\nfunction createResponse(request, body) {\n  const responseBodyOrNull = isResponseWithoutBody(request.status) ? null : body;\n  return new Response(responseBodyOrNull, {\n    status: request.status,\n    statusText: request.statusText,\n    headers: createHeadersFromXMLHttpReqestHeaders(\n      request.getAllResponseHeaders()\n    )\n  });\n}\nfunction createHeadersFromXMLHttpReqestHeaders(headersString) {\n  const headers = new Headers();\n  const lines = headersString.split(/[\\r\\n]+/);\n  for (const line of lines) {\n    if (line.trim() === \"\") {\n      continue;\n    }\n    const [name, ...parts] = line.split(\": \");\n    const value = parts.join(\": \");\n    headers.append(name, value);\n  }\n  return headers;\n}\nvar IS_MOCKED_RESPONSE = Symbol(\"isMockedResponse\");\nvar IS_NODE2 = isNodeProcess();\nvar XMLHttpRequestController = class {\n  constructor(initialRequest, logger) {\n    this.initialRequest = initialRequest;\n    this.logger = logger;\n    this.method = \"GET\";\n    this.url = null;\n    this.events = /* @__PURE__ */ new Map();\n    this.requestId = createRequestId();\n    this.requestHeaders = new Headers();\n    this.responseBuffer = new Uint8Array();\n    this.request = createProxy(initialRequest, {\n      setProperty: ([propertyName, nextValue], invoke) => {\n        switch (propertyName) {\n          case \"ontimeout\": {\n            const eventName = propertyName.slice(\n              2\n            );\n            this.request.addEventListener(eventName, nextValue);\n            return invoke();\n          }\n          default: {\n            return invoke();\n          }\n        }\n      },\n      methodCall: ([methodName, args], invoke) => {\n        var _a;\n        switch (methodName) {\n          case \"open\": {\n            const [method, url] = args;\n            if (typeof url === \"undefined\") {\n              this.method = \"GET\";\n              this.url = toAbsoluteUrl(method);\n            } else {\n              this.method = method;\n              this.url = toAbsoluteUrl(url);\n            }\n            this.logger = this.logger.extend(`${this.method} ${this.url.href}`);\n            this.logger.info(\"open\", this.method, this.url.href);\n            return invoke();\n          }\n          case \"addEventListener\": {\n            const [eventName, listener] = args;\n            this.registerEvent(eventName, listener);\n            this.logger.info(\"addEventListener\", eventName, listener);\n            return invoke();\n          }\n          case \"setRequestHeader\": {\n            const [name, value] = args;\n            this.requestHeaders.set(name, value);\n            this.logger.info(\"setRequestHeader\", name, value);\n            return invoke();\n          }\n          case \"send\": {\n            const [body] = args;\n            if (body != null) {\n              this.requestBody = typeof body === \"string\" ? encodeBuffer(body) : body;\n            }\n            this.request.addEventListener(\"load\", () => {\n              if (typeof this.onResponse !== \"undefined\") {\n                const fetchResponse = createResponse(\n                  this.request,\n                  /**\n                   * The `response` property is the right way to read\n                   * the ambiguous response body, as the request's \"responseType\" may differ.\n                   * @see https://xhr.spec.whatwg.org/#the-response-attribute\n                   */\n                  this.request.response\n                );\n                this.onResponse.call(this, {\n                  response: fetchResponse,\n                  isMockedResponse: IS_MOCKED_RESPONSE in this.request,\n                  request: fetchRequest,\n                  requestId: this.requestId\n                });\n              }\n            });\n            const fetchRequest = this.toFetchApiRequest();\n            const onceRequestSettled = ((_a = this.onRequest) == null ? void 0 : _a.call(this, {\n              request: fetchRequest,\n              requestId: this.requestId\n            })) || Promise.resolve();\n            onceRequestSettled.finally(() => {\n              if (this.request.readyState < this.request.LOADING) {\n                this.logger.info(\n                  \"request callback settled but request has not been handled (readystate %d), performing as-is...\",\n                  this.request.readyState\n                );\n                if (IS_NODE2) {\n                  this.request.setRequestHeader(\n                    INTERNAL_REQUEST_ID_HEADER_NAME,\n                    this.requestId\n                  );\n                }\n                return invoke();\n              }\n            });\n            break;\n          }\n          default: {\n            return invoke();\n          }\n        }\n      }\n    });\n  }\n  registerEvent(eventName, listener) {\n    const prevEvents = this.events.get(eventName) || [];\n    const nextEvents = prevEvents.concat(listener);\n    this.events.set(eventName, nextEvents);\n    this.logger.info('registered event \"%s\"', eventName, listener);\n  }\n  /**\n   * Responds to the current request with the given\n   * Fetch API `Response` instance.\n   */\n  respondWith(response) {\n    this.logger.info(\n      \"responding with a mocked response: %d %s\",\n      response.status,\n      response.statusText\n    );\n    define(this.request, IS_MOCKED_RESPONSE, true);\n    define(this.request, \"status\", response.status);\n    define(this.request, \"statusText\", response.statusText);\n    define(this.request, \"responseURL\", this.url.href);\n    this.request.getResponseHeader = new Proxy(this.request.getResponseHeader, {\n      apply: (_, __, args) => {\n        this.logger.info(\"getResponseHeader\", args[0]);\n        if (this.request.readyState < this.request.HEADERS_RECEIVED) {\n          this.logger.info(\"headers not received yet, returning null\");\n          return null;\n        }\n        const headerValue = response.headers.get(args[0]);\n        this.logger.info(\n          'resolved response header \"%s\" to',\n          args[0],\n          headerValue\n        );\n        return headerValue;\n      }\n    });\n    this.request.getAllResponseHeaders = new Proxy(\n      this.request.getAllResponseHeaders,\n      {\n        apply: () => {\n          this.logger.info(\"getAllResponseHeaders\");\n          if (this.request.readyState < this.request.HEADERS_RECEIVED) {\n            this.logger.info(\"headers not received yet, returning empty string\");\n            return \"\";\n          }\n          const headersList = Array.from(response.headers.entries());\n          const allHeaders = headersList.map(([headerName, headerValue]) => {\n            return `${headerName}: ${headerValue}`;\n          }).join(\"\\r\\n\");\n          this.logger.info(\"resolved all response headers to\", allHeaders);\n          return allHeaders;\n        }\n      }\n    );\n    Object.defineProperties(this.request, {\n      response: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.response\n      },\n      responseText: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.responseText\n      },\n      responseXML: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.responseXML\n      }\n    });\n    const totalResponseBodyLength = response.headers.has(\"Content-Length\") ? Number(response.headers.get(\"Content-Length\")) : (\n      /**\n       * @todo Infer the response body length from the response body.\n       */\n      void 0\n    );\n    this.logger.info(\"calculated response body length\", totalResponseBodyLength);\n    this.trigger(\"loadstart\", {\n      loaded: 0,\n      total: totalResponseBodyLength\n    });\n    this.setReadyState(this.request.HEADERS_RECEIVED);\n    this.setReadyState(this.request.LOADING);\n    const finalizeResponse = () => {\n      this.logger.info(\"finalizing the mocked response...\");\n      this.setReadyState(this.request.DONE);\n      this.trigger(\"load\", {\n        loaded: this.responseBuffer.byteLength,\n        total: totalResponseBodyLength\n      });\n      this.trigger(\"loadend\", {\n        loaded: this.responseBuffer.byteLength,\n        total: totalResponseBodyLength\n      });\n    };\n    if (response.body) {\n      this.logger.info(\"mocked response has body, streaming...\");\n      const reader = response.body.getReader();\n      const readNextResponseBodyChunk = async () => {\n        const { value, done } = await reader.read();\n        if (done) {\n          this.logger.info(\"response body stream done!\");\n          finalizeResponse();\n          return;\n        }\n        if (value) {\n          this.logger.info(\"read response body chunk:\", value);\n          this.responseBuffer = concatArrayBuffer(this.responseBuffer, value);\n          this.trigger(\"progress\", {\n            loaded: this.responseBuffer.byteLength,\n            total: totalResponseBodyLength\n          });\n        }\n        readNextResponseBodyChunk();\n      };\n      readNextResponseBodyChunk();\n    } else {\n      finalizeResponse();\n    }\n  }\n  responseBufferToText() {\n    return decodeBuffer(this.responseBuffer);\n  }\n  get response() {\n    this.logger.info(\n      \"getResponse (responseType: %s)\",\n      this.request.responseType\n    );\n    if (this.request.readyState !== this.request.DONE) {\n      return null;\n    }\n    switch (this.request.responseType) {\n      case \"json\": {\n        const responseJson = parseJson(this.responseBufferToText());\n        this.logger.info(\"resolved response JSON\", responseJson);\n        return responseJson;\n      }\n      case \"arraybuffer\": {\n        const arrayBuffer = toArrayBuffer(this.responseBuffer);\n        this.logger.info(\"resolved response ArrayBuffer\", arrayBuffer);\n        return arrayBuffer;\n      }\n      case \"blob\": {\n        const mimeType = this.request.getResponseHeader(\"Content-Type\") || \"text/plain\";\n        const responseBlob = new Blob([this.responseBufferToText()], {\n          type: mimeType\n        });\n        this.logger.info(\n          \"resolved response Blob (mime type: %s)\",\n          responseBlob,\n          mimeType\n        );\n        return responseBlob;\n      }\n      default: {\n        const responseText = this.responseBufferToText();\n        this.logger.info(\n          'resolving \"%s\" response type as text',\n          this.request.responseType,\n          responseText\n        );\n        return responseText;\n      }\n    }\n  }\n  get responseText() {\n    invariant(\n      this.request.responseType === \"\" || this.request.responseType === \"text\",\n      \"InvalidStateError: The object is in invalid state.\"\n    );\n    if (this.request.readyState !== this.request.LOADING && this.request.readyState !== this.request.DONE) {\n      return \"\";\n    }\n    const responseText = this.responseBufferToText();\n    this.logger.info('getResponseText: \"%s\"', responseText);\n    return responseText;\n  }\n  get responseXML() {\n    invariant(\n      this.request.responseType === \"\" || this.request.responseType === \"document\",\n      \"InvalidStateError: The object is in invalid state.\"\n    );\n    if (this.request.readyState !== this.request.DONE) {\n      return null;\n    }\n    const contentType = this.request.getResponseHeader(\"Content-Type\") || \"\";\n    if (typeof DOMParser === \"undefined\") {\n      console.warn(\n        \"Cannot retrieve XMLHttpRequest response body as XML: DOMParser is not defined. You are likely using an environment that is not browser or does not polyfill browser globals correctly.\"\n      );\n      return null;\n    }\n    if (isDomParserSupportedType(contentType)) {\n      return new DOMParser().parseFromString(\n        this.responseBufferToText(),\n        contentType\n      );\n    }\n    return null;\n  }\n  errorWith(error2) {\n    this.logger.info(\"responding with an error\");\n    this.setReadyState(this.request.DONE);\n    this.trigger(\"error\");\n    this.trigger(\"loadend\");\n  }\n  /**\n   * Transitions this request's `readyState` to the given one.\n   */\n  setReadyState(nextReadyState) {\n    this.logger.info(\n      \"setReadyState: %d -> %d\",\n      this.request.readyState,\n      nextReadyState\n    );\n    if (this.request.readyState === nextReadyState) {\n      this.logger.info(\"ready state identical, skipping transition...\");\n      return;\n    }\n    define(this.request, \"readyState\", nextReadyState);\n    this.logger.info(\"set readyState to: %d\", nextReadyState);\n    if (nextReadyState !== this.request.UNSENT) {\n      this.logger.info('triggerring \"readystatechange\" event...');\n      this.trigger(\"readystatechange\");\n    }\n  }\n  /**\n   * Triggers given event on the `XMLHttpRequest` instance.\n   */\n  trigger(eventName, options) {\n    const callback = this.request[`on${eventName}`];\n    const event = createEvent(this.request, eventName, options);\n    this.logger.info('trigger \"%s\"', eventName, options || \"\");\n    if (typeof callback === \"function\") {\n      this.logger.info('found a direct \"%s\" callback, calling...', eventName);\n      callback.call(this.request, event);\n    }\n    for (const [registeredEventName, listeners] of this.events) {\n      if (registeredEventName === eventName) {\n        this.logger.info(\n          'found %d listener(s) for \"%s\" event, calling...',\n          listeners.length,\n          eventName\n        );\n        listeners.forEach((listener) => listener.call(this.request, event));\n      }\n    }\n  }\n  /**\n   * Converts this `XMLHttpRequest` instance into a Fetch API `Request` instance.\n   */\n  toFetchApiRequest() {\n    this.logger.info(\"converting request to a Fetch API Request...\");\n    const fetchRequest = new Request(this.url.href, {\n      method: this.method,\n      headers: this.requestHeaders,\n      /**\n       * @see https://xhr.spec.whatwg.org/#cross-origin-credentials\n       */\n      credentials: this.request.withCredentials ? \"include\" : \"same-origin\",\n      body: [\"GET\", \"HEAD\"].includes(this.method) ? null : this.requestBody\n    });\n    const proxyHeaders = createProxy(fetchRequest.headers, {\n      methodCall: ([methodName, args], invoke) => {\n        switch (methodName) {\n          case \"append\":\n          case \"set\": {\n            const [headerName, headerValue] = args;\n            this.request.setRequestHeader(headerName, headerValue);\n            break;\n          }\n          case \"delete\": {\n            const [headerName] = args;\n            console.warn(\n              `XMLHttpRequest: Cannot remove a \"${headerName}\" header from the Fetch API representation of the \"${fetchRequest.method} ${fetchRequest.url}\" request. XMLHttpRequest headers cannot be removed.`\n            );\n            break;\n          }\n        }\n        return invoke();\n      }\n    });\n    define(fetchRequest, \"headers\", proxyHeaders);\n    this.logger.info(\"converted request to a Fetch API Request!\", fetchRequest);\n    return fetchRequest;\n  }\n};\nfunction toAbsoluteUrl(url) {\n  if (typeof location === \"undefined\") {\n    return new URL(url);\n  }\n  return new URL(url.toString(), location.href);\n}\nfunction define(target, property, value) {\n  Reflect.defineProperty(target, property, {\n    // Ensure writable properties to allow redefining readonly properties.\n    writable: true,\n    enumerable: true,\n    value\n  });\n}\nfunction createXMLHttpRequestProxy({\n  emitter,\n  logger\n}) {\n  const XMLHttpRequestProxy = new Proxy(globalThis.XMLHttpRequest, {\n    construct(target, args, newTarget) {\n      logger.info(\"constructed new XMLHttpRequest\");\n      const originalRequest = Reflect.construct(\n        target,\n        args,\n        newTarget\n      );\n      const prototypeDescriptors = Object.getOwnPropertyDescriptors(\n        target.prototype\n      );\n      for (const propertyName in prototypeDescriptors) {\n        Reflect.defineProperty(\n          originalRequest,\n          propertyName,\n          prototypeDescriptors[propertyName]\n        );\n      }\n      const xhrRequestController = new XMLHttpRequestController(\n        originalRequest,\n        logger\n      );\n      xhrRequestController.onRequest = async function({ request, requestId }) {\n        const { interactiveRequest, requestController } = toInteractiveRequest(request);\n        this.logger.info(\"awaiting mocked response...\");\n        emitter.once(\"request\", ({ requestId: pendingRequestId }) => {\n          if (pendingRequestId !== requestId) {\n            return;\n          }\n          if (requestController.responsePromise.state === \"pending\") {\n            requestController.respondWith(void 0);\n          }\n        });\n        const resolverResult = await until(async () => {\n          this.logger.info(\n            'emitting the \"request\" event for %s listener(s)...',\n            emitter.listenerCount(\"request\")\n          );\n          await emitAsync(emitter, \"request\", {\n            request: interactiveRequest,\n            requestId\n          });\n          this.logger.info('all \"request\" listeners settled!');\n          const mockedResponse2 = await requestController.responsePromise;\n          this.logger.info(\"event.respondWith called with:\", mockedResponse2);\n          return mockedResponse2;\n        });\n        if (resolverResult.error) {\n          this.logger.info(\n            \"request listener threw an exception, aborting request...\",\n            resolverResult.error\n          );\n          xhrRequestController.errorWith(resolverResult.error);\n          return;\n        }\n        const mockedResponse = resolverResult.data;\n        if (typeof mockedResponse !== \"undefined\") {\n          this.logger.info(\n            \"received mocked response: %d %s\",\n            mockedResponse.status,\n            mockedResponse.statusText\n          );\n          if (mockedResponse.type === \"error\") {\n            this.logger.info(\n              \"received a network error response, rejecting the request promise...\"\n            );\n            xhrRequestController.errorWith(new TypeError(\"Network error\"));\n            return;\n          }\n          return xhrRequestController.respondWith(mockedResponse);\n        }\n        this.logger.info(\n          \"no mocked response received, performing request as-is...\"\n        );\n      };\n      xhrRequestController.onResponse = async function({\n        response,\n        isMockedResponse,\n        request,\n        requestId\n      }) {\n        this.logger.info(\n          'emitting the \"response\" event for %s listener(s)...',\n          emitter.listenerCount(\"response\")\n        );\n        emitter.emit(\"response\", {\n          response,\n          isMockedResponse,\n          request,\n          requestId\n        });\n      };\n      return xhrRequestController.request;\n    }\n  });\n  return XMLHttpRequestProxy;\n}\nvar _XMLHttpRequestInterceptor = class extends Interceptor {\n  constructor() {\n    super(_XMLHttpRequestInterceptor.interceptorSymbol);\n  }\n  checkEnvironment() {\n    return typeof globalThis.XMLHttpRequest !== \"undefined\";\n  }\n  setup() {\n    const logger = this.logger.extend(\"setup\");\n    logger.info('patching \"XMLHttpRequest\" module...');\n    const PureXMLHttpRequest = globalThis.XMLHttpRequest;\n    invariant(\n      !PureXMLHttpRequest[IS_PATCHED_MODULE],\n      'Failed to patch the \"XMLHttpRequest\" module: already patched.'\n    );\n    globalThis.XMLHttpRequest = createXMLHttpRequestProxy({\n      emitter: this.emitter,\n      logger: this.logger\n    });\n    logger.info(\n      'native \"XMLHttpRequest\" module patched!',\n      globalThis.XMLHttpRequest.name\n    );\n    Object.defineProperty(globalThis.XMLHttpRequest, IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true\n    });\n    this.subscriptions.push(() => {\n      Object.defineProperty(globalThis.XMLHttpRequest, IS_PATCHED_MODULE, {\n        value: void 0\n      });\n      globalThis.XMLHttpRequest = PureXMLHttpRequest;\n      logger.info(\n        'native \"XMLHttpRequest\" module restored!',\n        globalThis.XMLHttpRequest.name\n      );\n    });\n  }\n};\nvar XMLHttpRequestInterceptor = _XMLHttpRequestInterceptor;\nXMLHttpRequestInterceptor.interceptorSymbol = Symbol(\"xhr\");\n\n// src/browser/setupWorker/start/createFallbackRequestListener.ts\n\nfunction createFallbackRequestListener(context, options) {\n  const interceptor = new BatchInterceptor({\n    name: \"fallback\",\n    interceptors: [new FetchInterceptor(), new XMLHttpRequestInterceptor()]\n  });\n  interceptor.on(\"request\", async ({ request, requestId }) => {\n    const requestCloneForLogs = request.clone();\n    const response = await (0,_core_utils_handleRequest_mjs__WEBPACK_IMPORTED_MODULE_2__.handleRequest)(\n      request,\n      requestId,\n      context.getRequestHandlers(),\n      options,\n      context.emitter,\n      {\n        onMockedResponse(_, { handler, parsedResult }) {\n          if (!options.quiet) {\n            context.emitter.once(\"response:mocked\", ({ response: response2 }) => {\n              handler.log({\n                request: requestCloneForLogs,\n                response: response2,\n                parsedResult\n              });\n            });\n          }\n        }\n      }\n    );\n    if (response) {\n      request.respondWith(response);\n    }\n  });\n  interceptor.on(\n    \"response\",\n    ({ response, isMockedResponse, request, requestId }) => {\n      context.emitter.emit(\n        isMockedResponse ? \"response:mocked\" : \"response:bypass\",\n        {\n          response,\n          request,\n          requestId\n        }\n      );\n    }\n  );\n  interceptor.apply();\n  return interceptor;\n}\n\n// src/browser/setupWorker/start/createFallbackStart.ts\nfunction createFallbackStart(context) {\n  return async function start(options) {\n    context.fallbackInterceptor = createFallbackRequestListener(\n      context,\n      options\n    );\n    printStartMessage({\n      message: \"Mocking enabled (fallback mode).\",\n      quiet: options.quiet\n    });\n    return void 0;\n  };\n}\n\n// src/browser/setupWorker/stop/createFallbackStop.ts\nfunction createFallbackStop(context) {\n  return function stop() {\n    context.fallbackInterceptor?.dispose();\n    printStopMessage({ quiet: context.startOptions?.quiet });\n  };\n}\n\n// src/browser/setupWorker/setupWorker.ts\n\n\n\n\n// src/browser/utils/supportsReadableStreamTransfer.ts\nfunction supportsReadableStreamTransfer() {\n  try {\n    const stream = new ReadableStream({\n      start: (controller) => controller.close()\n    });\n    const message = new MessageChannel();\n    message.port1.postMessage(stream, [stream]);\n    return true;\n  } catch (error2) {\n    return false;\n  }\n}\n\n// src/browser/setupWorker/setupWorker.ts\nvar SetupWorkerApi = class extends _core_SetupApi_mjs__WEBPACK_IMPORTED_MODULE_4__.SetupApi {\n  context;\n  startHandler = null;\n  stopHandler = null;\n  listeners;\n  constructor(...handlers) {\n    super(...handlers);\n    invariant(\n      !isNodeProcess(),\n      _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.formatMessage(\n        \"Failed to execute `setupWorker` in a non-browser environment. Consider using `setupServer` for Node.js environment instead.\"\n      )\n    );\n    this.listeners = [];\n    this.context = this.createWorkerContext();\n  }\n  createWorkerContext() {\n    const context = {\n      // Mocking is not considered enabled until the worker\n      // signals back the successful activation event.\n      isMockingEnabled: false,\n      startOptions: null,\n      worker: null,\n      getRequestHandlers: () => {\n        return this.handlersController.currentHandlers();\n      },\n      registration: null,\n      requests: /* @__PURE__ */ new Map(),\n      emitter: this.emitter,\n      workerChannel: {\n        on: (eventType, callback) => {\n          this.context.events.addListener(navigator.serviceWorker, \"message\", (event) => {\n            if (event.source !== this.context.worker) {\n              return;\n            }\n            const message = event.data;\n            if (!message) {\n              return;\n            }\n            if (message.type === eventType) {\n              callback(event, message);\n            }\n          });\n        },\n        send: (type) => {\n          this.context.worker?.postMessage(type);\n        }\n      },\n      events: {\n        addListener: (target, eventType, callback) => {\n          target.addEventListener(eventType, callback);\n          this.listeners.push({\n            eventType,\n            target,\n            callback\n          });\n          return () => {\n            target.removeEventListener(eventType, callback);\n          };\n        },\n        removeAllListeners: () => {\n          for (const { target, eventType, callback } of this.listeners) {\n            target.removeEventListener(eventType, callback);\n          }\n          this.listeners = [];\n        },\n        once: (eventType) => {\n          const bindings = [];\n          return new Promise((resolve, reject) => {\n            const handleIncomingMessage = (event) => {\n              try {\n                const message = event.data;\n                if (message.type === eventType) {\n                  resolve(message);\n                }\n              } catch (error2) {\n                reject(error2);\n              }\n            };\n            bindings.push(\n              this.context.events.addListener(\n                navigator.serviceWorker,\n                \"message\",\n                handleIncomingMessage\n              ),\n              this.context.events.addListener(\n                navigator.serviceWorker,\n                \"messageerror\",\n                reject\n              )\n            );\n          }).finally(() => {\n            bindings.forEach((unbind) => unbind());\n          });\n        }\n      },\n      supports: {\n        serviceWorkerApi: !(\"serviceWorker\" in navigator) || location.protocol === \"file:\",\n        readableStreamTransfer: supportsReadableStreamTransfer()\n      }\n    };\n    this.startHandler = context.supports.serviceWorkerApi ? createFallbackStart(context) : createStartHandler(context);\n    this.stopHandler = context.supports.serviceWorkerApi ? createFallbackStop(context) : createStop(context);\n    return context;\n  }\n  async start(options = {}) {\n    if (options.waitUntilReady === true) {\n      _core_utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.devUtils.warn(\n        'The \"waitUntilReady\" option has been deprecated. Please remove it from this \"worker.start()\" call. Follow the recommended Browser integration (https://mswjs.io/docs/integrations/browser) to eliminate any race conditions between the Service Worker registration and any requests made by your application on initial render.'\n      );\n    }\n    this.context.startOptions = (0,_core_utils_internal_mergeRight_mjs__WEBPACK_IMPORTED_MODULE_5__.mergeRight)(\n      DEFAULT_START_OPTIONS,\n      options\n    );\n    return await this.startHandler(this.context.startOptions, options);\n  }\n  stop() {\n    super.dispose();\n    this.context.events.removeAllListeners();\n    this.context.emitter.removeAllListeners();\n    this.stopHandler();\n  }\n};\nfunction setupWorker(...handlers) {\n  return new SetupWorkerApi(...handlers);\n}\n\n//# sourceMappingURL=index.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/browser/index.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/HttpResponse.mjs":
/*!****************************************************!*\
  !*** ./node_modules/msw/lib/core/HttpResponse.mjs ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpResponse: () => (/* binding */ HttpResponse)\n/* harmony export */ });\n/* harmony import */ var _utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/HttpResponse/decorators.mjs */ \"./node_modules/msw/lib/core/utils/HttpResponse/decorators.mjs\");\n\nclass HttpResponse extends Response {\n  constructor(body, init) {\n    const responseInit = (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_0__.normalizeResponseInit)(init);\n    super(body, responseInit);\n    (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_0__.decorateResponse)(this, responseInit);\n  }\n  /**\n   * Create a `Response` with a `Content-Type: \"text/plain\"` body.\n   * @example\n   * HttpResponse.text('hello world')\n   * HttpResponse.text('Error', { status: 500 })\n   */\n  static text(body, init) {\n    const responseInit = (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_0__.normalizeResponseInit)(init);\n    if (!responseInit.headers.has(\"Content-Type\")) {\n      responseInit.headers.set(\"Content-Type\", \"text/plain\");\n    }\n    if (!responseInit.headers.has(\"Content-Length\")) {\n      responseInit.headers.set(\n        \"Content-Length\",\n        body ? new Blob([body]).size.toString() : \"0\"\n      );\n    }\n    return new HttpResponse(body, responseInit);\n  }\n  /**\n   * Create a `Response` with a `Content-Type: \"application/json\"` body.\n   * @example\n   * HttpResponse.json({ firstName: 'John' })\n   * HttpResponse.json({ error: 'Not Authorized' }, { status: 401 })\n   */\n  static json(body, init) {\n    const responseInit = (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_0__.normalizeResponseInit)(init);\n    if (!responseInit.headers.has(\"Content-Type\")) {\n      responseInit.headers.set(\"Content-Type\", \"application/json\");\n    }\n    const responseText = JSON.stringify(body);\n    if (!responseInit.headers.has(\"Content-Length\")) {\n      responseInit.headers.set(\n        \"Content-Length\",\n        responseText ? new Blob([responseText]).size.toString() : \"0\"\n      );\n    }\n    return new HttpResponse(\n      responseText,\n      responseInit\n    );\n  }\n  /**\n   * Create a `Response` with a `Content-Type: \"application/xml\"` body.\n   * @example\n   * HttpResponse.xml(`<user name=\"John\" />`)\n   * HttpResponse.xml(`<article id=\"abc-123\" />`, { status: 201 })\n   */\n  static xml(body, init) {\n    const responseInit = (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_0__.normalizeResponseInit)(init);\n    if (!responseInit.headers.has(\"Content-Type\")) {\n      responseInit.headers.set(\"Content-Type\", \"text/xml\");\n    }\n    return new HttpResponse(body, responseInit);\n  }\n  /**\n   * Create a `Response` with an `ArrayBuffer` body.\n   * @example\n   * const buffer = new ArrayBuffer(3)\n   * const view = new Uint8Array(buffer)\n   * view.set([1, 2, 3])\n   *\n   * HttpResponse.arrayBuffer(buffer)\n   */\n  static arrayBuffer(body, init) {\n    const responseInit = (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_0__.normalizeResponseInit)(init);\n    if (body) {\n      responseInit.headers.set(\"Content-Length\", body.byteLength.toString());\n    }\n    return new HttpResponse(body, responseInit);\n  }\n  /**\n   * Create a `Response` with a `FormData` body.\n   * @example\n   * const data = new FormData()\n   * data.set('name', 'Alice')\n   *\n   * HttpResponse.formData(data)\n   */\n  static formData(body, init) {\n    return new HttpResponse(body, (0,_utils_HttpResponse_decorators_mjs__WEBPACK_IMPORTED_MODULE_0__.normalizeResponseInit)(init));\n  }\n}\n\n//# sourceMappingURL=HttpResponse.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/HttpResponse.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/SetupApi.mjs":
/*!************************************************!*\
  !*** ./node_modules/msw/lib/core/SetupApi.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HandlersController: () => (/* binding */ HandlersController),\n/* harmony export */   InMemoryHandlersController: () => (/* binding */ InMemoryHandlersController),\n/* harmony export */   SetupApi: () => (/* binding */ SetupApi)\n/* harmony export */ });\n/* harmony import */ var outvariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! outvariant */ \"./node_modules/outvariant/lib/index.mjs\");\n/* harmony import */ var strict_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! strict-event-emitter */ \"./node_modules/strict-event-emitter/lib/index.mjs\");\n/* harmony import */ var _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/internal/devUtils.mjs */ \"./node_modules/msw/lib/core/utils/internal/devUtils.mjs\");\n/* harmony import */ var _utils_internal_pipeEvents_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/internal/pipeEvents.mjs */ \"./node_modules/msw/lib/core/utils/internal/pipeEvents.mjs\");\n/* harmony import */ var _utils_internal_toReadonlyArray_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/internal/toReadonlyArray.mjs */ \"./node_modules/msw/lib/core/utils/internal/toReadonlyArray.mjs\");\n/* harmony import */ var _utils_internal_Disposable_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/internal/Disposable.mjs */ \"./node_modules/msw/lib/core/utils/internal/Disposable.mjs\");\n\n\n\n\n\n\nclass HandlersController {\n}\nclass InMemoryHandlersController {\n  constructor(initialHandlers) {\n    this.initialHandlers = initialHandlers;\n    this.handlers = [...initialHandlers];\n  }\n  handlers;\n  prepend(runtimeHandles) {\n    this.handlers.unshift(...runtimeHandles);\n  }\n  reset(nextHandlers) {\n    this.handlers = nextHandlers.length > 0 ? [...nextHandlers] : [...this.initialHandlers];\n  }\n  currentHandlers() {\n    return this.handlers;\n  }\n}\nclass SetupApi extends _utils_internal_Disposable_mjs__WEBPACK_IMPORTED_MODULE_2__.Disposable {\n  handlersController;\n  emitter;\n  publicEmitter;\n  events;\n  constructor(...initialHandlers) {\n    super();\n    (0,outvariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(\n      this.validateHandlers(initialHandlers),\n      _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.devUtils.formatMessage(\n        `Failed to apply given request handlers: invalid input. Did you forget to spread the request handlers Array?`\n      )\n    );\n    this.handlersController = new InMemoryHandlersController(initialHandlers);\n    this.emitter = new strict_event_emitter__WEBPACK_IMPORTED_MODULE_1__.Emitter();\n    this.publicEmitter = new strict_event_emitter__WEBPACK_IMPORTED_MODULE_1__.Emitter();\n    (0,_utils_internal_pipeEvents_mjs__WEBPACK_IMPORTED_MODULE_4__.pipeEvents)(this.emitter, this.publicEmitter);\n    this.events = this.createLifeCycleEvents();\n    this.subscriptions.push(() => {\n      this.emitter.removeAllListeners();\n      this.publicEmitter.removeAllListeners();\n    });\n  }\n  validateHandlers(handlers) {\n    return handlers.every((handler) => !Array.isArray(handler));\n  }\n  use(...runtimeHandlers) {\n    (0,outvariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(\n      this.validateHandlers(runtimeHandlers),\n      _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.devUtils.formatMessage(\n        `Failed to call \"use()\" with the given request handlers: invalid input. Did you forget to spread the array of request handlers?`\n      )\n    );\n    this.handlersController.prepend(runtimeHandlers);\n  }\n  restoreHandlers() {\n    this.handlersController.currentHandlers().forEach((handler) => {\n      handler.isUsed = false;\n    });\n  }\n  resetHandlers(...nextHandlers) {\n    this.handlersController.reset(nextHandlers);\n  }\n  listHandlers() {\n    return (0,_utils_internal_toReadonlyArray_mjs__WEBPACK_IMPORTED_MODULE_5__.toReadonlyArray)(this.handlersController.currentHandlers());\n  }\n  createLifeCycleEvents() {\n    return {\n      on: (...args) => {\n        return this.publicEmitter.on(...args);\n      },\n      removeListener: (...args) => {\n        return this.publicEmitter.removeListener(...args);\n      },\n      removeAllListeners: (...args) => {\n        return this.publicEmitter.removeAllListeners(...args);\n      }\n    };\n  }\n}\n\n//# sourceMappingURL=SetupApi.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/SetupApi.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/handlers/HttpHandler.mjs":
/*!************************************************************!*\
  !*** ./node_modules/msw/lib/core/handlers/HttpHandler.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpHandler: () => (/* binding */ HttpHandler),\n/* harmony export */   HttpMethods: () => (/* binding */ HttpMethods)\n/* harmony export */ });\n/* harmony import */ var _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/internal/devUtils.mjs */ \"./node_modules/msw/lib/core/utils/internal/devUtils.mjs\");\n/* harmony import */ var _utils_internal_isStringEqual_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/internal/isStringEqual.mjs */ \"./node_modules/msw/lib/core/utils/internal/isStringEqual.mjs\");\n/* harmony import */ var _utils_logging_getStatusCodeColor_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/logging/getStatusCodeColor.mjs */ \"./node_modules/msw/lib/core/utils/logging/getStatusCodeColor.mjs\");\n/* harmony import */ var _utils_logging_getTimestamp_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/logging/getTimestamp.mjs */ \"./node_modules/msw/lib/core/utils/logging/getTimestamp.mjs\");\n/* harmony import */ var _utils_logging_serializeRequest_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/logging/serializeRequest.mjs */ \"./node_modules/msw/lib/core/utils/logging/serializeRequest.mjs\");\n/* harmony import */ var _utils_logging_serializeResponse_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/logging/serializeResponse.mjs */ \"./node_modules/msw/lib/core/utils/logging/serializeResponse.mjs\");\n/* harmony import */ var _utils_matching_matchRequestUrl_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/matching/matchRequestUrl.mjs */ \"./node_modules/msw/lib/core/utils/matching/matchRequestUrl.mjs\");\n/* harmony import */ var _utils_request_toPublicUrl_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/request/toPublicUrl.mjs */ \"./node_modules/msw/lib/core/utils/request/toPublicUrl.mjs\");\n/* harmony import */ var _utils_request_getRequestCookies_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/request/getRequestCookies.mjs */ \"./node_modules/msw/lib/core/utils/request/getRequestCookies.mjs\");\n/* harmony import */ var _utils_url_cleanUrl_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/url/cleanUrl.mjs */ \"./node_modules/msw/lib/core/utils/url/cleanUrl.mjs\");\n/* harmony import */ var _RequestHandler_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RequestHandler.mjs */ \"./node_modules/msw/lib/core/handlers/RequestHandler.mjs\");\n\n\n\n\n\n\n\n\n\n\n\nvar HttpMethods = /* @__PURE__ */ ((HttpMethods2) => {\n  HttpMethods2[\"HEAD\"] = \"HEAD\";\n  HttpMethods2[\"GET\"] = \"GET\";\n  HttpMethods2[\"POST\"] = \"POST\";\n  HttpMethods2[\"PUT\"] = \"PUT\";\n  HttpMethods2[\"PATCH\"] = \"PATCH\";\n  HttpMethods2[\"OPTIONS\"] = \"OPTIONS\";\n  HttpMethods2[\"DELETE\"] = \"DELETE\";\n  return HttpMethods2;\n})(HttpMethods || {});\nclass HttpHandler extends _RequestHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.RequestHandler {\n  constructor(method, path, resolver, options) {\n    super({\n      info: {\n        header: `${method} ${path}`,\n        path,\n        method\n      },\n      resolver,\n      options\n    });\n    this.checkRedundantQueryParameters();\n  }\n  checkRedundantQueryParameters() {\n    const { method, path } = this.info;\n    if (path instanceof RegExp) {\n      return;\n    }\n    const url = (0,_utils_url_cleanUrl_mjs__WEBPACK_IMPORTED_MODULE_1__.cleanUrl)(path);\n    if (url === path) {\n      return;\n    }\n    const searchParams = (0,_utils_url_cleanUrl_mjs__WEBPACK_IMPORTED_MODULE_1__.getSearchParams)(path);\n    const queryParams = [];\n    searchParams.forEach((_, paramName) => {\n      queryParams.push(paramName);\n    });\n    _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.devUtils.warn(\n      `Found a redundant usage of query parameters in the request handler URL for \"${method} ${path}\". Please match against a path instead and access query parameters using \"new URL(request.url).searchParams\" instead. Learn more: https://mswjs.io/docs/recipes/query-parameters`\n    );\n  }\n  async parse(args) {\n    const url = new URL(args.request.url);\n    const match = (0,_utils_matching_matchRequestUrl_mjs__WEBPACK_IMPORTED_MODULE_3__.matchRequestUrl)(\n      url,\n      this.info.path,\n      args.resolutionContext?.baseUrl\n    );\n    const cookies = (0,_utils_request_getRequestCookies_mjs__WEBPACK_IMPORTED_MODULE_4__.getAllRequestCookies)(args.request);\n    return {\n      match,\n      cookies\n    };\n  }\n  predicate(args) {\n    const hasMatchingMethod = this.matchMethod(args.request.method);\n    const hasMatchingUrl = args.parsedResult.match.matches;\n    return hasMatchingMethod && hasMatchingUrl;\n  }\n  matchMethod(actualMethod) {\n    return this.info.method instanceof RegExp ? this.info.method.test(actualMethod) : (0,_utils_internal_isStringEqual_mjs__WEBPACK_IMPORTED_MODULE_5__.isStringEqual)(this.info.method, actualMethod);\n  }\n  extendResolverArgs(args) {\n    return {\n      params: args.parsedResult.match?.params || {},\n      cookies: args.parsedResult.cookies\n    };\n  }\n  async log(args) {\n    const publicUrl = (0,_utils_request_toPublicUrl_mjs__WEBPACK_IMPORTED_MODULE_6__.toPublicUrl)(args.request.url);\n    const loggedRequest = await (0,_utils_logging_serializeRequest_mjs__WEBPACK_IMPORTED_MODULE_7__.serializeRequest)(args.request);\n    const loggedResponse = await (0,_utils_logging_serializeResponse_mjs__WEBPACK_IMPORTED_MODULE_8__.serializeResponse)(args.response);\n    const statusColor = (0,_utils_logging_getStatusCodeColor_mjs__WEBPACK_IMPORTED_MODULE_9__.getStatusCodeColor)(loggedResponse.status);\n    console.groupCollapsed(\n      _utils_internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.devUtils.formatMessage(\n        `${(0,_utils_logging_getTimestamp_mjs__WEBPACK_IMPORTED_MODULE_10__.getTimestamp)()} ${args.request.method} ${publicUrl} (%c${loggedResponse.status} ${loggedResponse.statusText}%c)`\n      ),\n      `color:${statusColor}`,\n      \"color:inherit\"\n    );\n    console.log(\"Request\", loggedRequest);\n    console.log(\"Handler:\", this);\n    console.log(\"Response\", loggedResponse);\n    console.groupEnd();\n  }\n}\n\n//# sourceMappingURL=HttpHandler.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/handlers/HttpHandler.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/handlers/RequestHandler.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/msw/lib/core/handlers/RequestHandler.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestHandler: () => (/* binding */ RequestHandler)\n/* harmony export */ });\n/* harmony import */ var outvariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! outvariant */ \"./node_modules/outvariant/lib/index.mjs\");\n/* harmony import */ var _utils_internal_getCallFrame_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/internal/getCallFrame.mjs */ \"./node_modules/msw/lib/core/utils/internal/getCallFrame.mjs\");\n/* harmony import */ var _utils_internal_isIterable_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/internal/isIterable.mjs */ \"./node_modules/msw/lib/core/utils/internal/isIterable.mjs\");\n\n\n\nclass RequestHandler {\n  static cache = /* @__PURE__ */ new WeakMap();\n  info;\n  /**\n   * Indicates whether this request handler has been used\n   * (its resolver has successfully executed).\n   */\n  isUsed;\n  resolver;\n  resolverGenerator;\n  resolverGeneratorResult;\n  options;\n  constructor(args) {\n    this.resolver = args.resolver;\n    this.options = args.options;\n    const callFrame = (0,_utils_internal_getCallFrame_mjs__WEBPACK_IMPORTED_MODULE_1__.getCallFrame)(new Error());\n    this.info = {\n      ...args.info,\n      callFrame\n    };\n    this.isUsed = false;\n  }\n  /**\n   * Parse the intercepted request to extract additional information from it.\n   * Parsed result is then exposed to other methods of this request handler.\n   */\n  async parse(_args) {\n    return {};\n  }\n  /**\n   * Test if this handler matches the given request.\n   *\n   * This method is not used internally but is exposed\n   * as a convenience method for consumers writing custom\n   * handlers.\n   */\n  async test(args) {\n    const parsedResult = await this.parse({\n      request: args.request,\n      resolutionContext: args.resolutionContext\n    });\n    return this.predicate({\n      request: args.request,\n      parsedResult,\n      resolutionContext: args.resolutionContext\n    });\n  }\n  extendResolverArgs(_args) {\n    return {};\n  }\n  // Clone the request instance before it's passed to the handler phases\n  // and the response resolver so we can always read it for logging.\n  // We only clone it once per request to avoid unnecessary overhead.\n  cloneRequestOrGetFromCache(request) {\n    const existingClone = RequestHandler.cache.get(request);\n    if (typeof existingClone !== \"undefined\") {\n      return existingClone;\n    }\n    const clonedRequest = request.clone();\n    RequestHandler.cache.set(request, clonedRequest);\n    return clonedRequest;\n  }\n  /**\n   * Execute this request handler and produce a mocked response\n   * using the given resolver function.\n   */\n  async run(args) {\n    if (this.isUsed && this.options?.once) {\n      return null;\n    }\n    const requestClone = this.cloneRequestOrGetFromCache(args.request);\n    const parsedResult = await this.parse({\n      request: args.request,\n      resolutionContext: args.resolutionContext\n    });\n    const shouldInterceptRequest = this.predicate({\n      request: args.request,\n      parsedResult,\n      resolutionContext: args.resolutionContext\n    });\n    if (!shouldInterceptRequest) {\n      return null;\n    }\n    if (this.isUsed && this.options?.once) {\n      return null;\n    }\n    this.isUsed = true;\n    const executeResolver = this.wrapResolver(this.resolver);\n    const resolverExtras = this.extendResolverArgs({\n      request: args.request,\n      parsedResult\n    });\n    const mockedResponsePromise = executeResolver({\n      ...resolverExtras,\n      requestId: args.requestId,\n      request: args.request\n    }).catch((errorOrResponse) => {\n      if (errorOrResponse instanceof Response) {\n        return errorOrResponse;\n      }\n      throw errorOrResponse;\n    });\n    const mockedResponse = await mockedResponsePromise;\n    const executionResult = this.createExecutionResult({\n      // Pass the cloned request to the result so that logging\n      // and other consumers could read its body once more.\n      request: requestClone,\n      requestId: args.requestId,\n      response: mockedResponse,\n      parsedResult\n    });\n    return executionResult;\n  }\n  wrapResolver(resolver) {\n    return async (info) => {\n      const result = this.resolverGenerator || await resolver(info);\n      if ((0,_utils_internal_isIterable_mjs__WEBPACK_IMPORTED_MODULE_2__.isIterable)(result)) {\n        this.isUsed = false;\n        const { value, done } = result[Symbol.iterator]().next();\n        const nextResponse = await value;\n        if (done) {\n          this.isUsed = true;\n        }\n        if (!nextResponse && done) {\n          (0,outvariant__WEBPACK_IMPORTED_MODULE_0__.invariant)(\n            this.resolverGeneratorResult,\n            \"Failed to returned a previously stored generator response: the value is not a valid Response.\"\n          );\n          return this.resolverGeneratorResult.clone();\n        }\n        if (!this.resolverGenerator) {\n          this.resolverGenerator = result;\n        }\n        if (nextResponse) {\n          this.resolverGeneratorResult = nextResponse?.clone();\n        }\n        return nextResponse;\n      }\n      return result;\n    };\n  }\n  createExecutionResult(args) {\n    return {\n      handler: this,\n      request: args.request,\n      requestId: args.requestId,\n      response: args.response,\n      parsedResult: args.parsedResult\n    };\n  }\n}\n\n//# sourceMappingURL=RequestHandler.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/handlers/RequestHandler.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/http.mjs":
/*!********************************************!*\
  !*** ./node_modules/msw/lib/core/http.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   http: () => (/* binding */ http)\n/* harmony export */ });\n/* harmony import */ var _handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handlers/HttpHandler.mjs */ \"./node_modules/msw/lib/core/handlers/HttpHandler.mjs\");\n\nfunction createHttpHandler(method) {\n  return (path, resolver, options = {}) => {\n    return new _handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpHandler(method, path, resolver, options);\n  };\n}\nconst http = {\n  all: createHttpHandler(/.+/),\n  head: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.HEAD),\n  get: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.GET),\n  post: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.POST),\n  put: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.PUT),\n  delete: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.DELETE),\n  patch: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.PATCH),\n  options: createHttpHandler(_handlers_HttpHandler_mjs__WEBPACK_IMPORTED_MODULE_0__.HttpMethods.OPTIONS)\n};\n\n//# sourceMappingURL=http.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/http.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/HttpResponse/decorators.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/HttpResponse/decorators.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decorateResponse: () => (/* binding */ decorateResponse),\n/* harmony export */   normalizeResponseInit: () => (/* binding */ normalizeResponseInit)\n/* harmony export */ });\n/* harmony import */ var _bundled_es_modules_statuses__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bundled-es-modules/statuses */ \"./node_modules/@bundled-es-modules/statuses/index-esm.js\");\n/* harmony import */ var headers_polyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! headers-polyfill */ \"./node_modules/headers-polyfill/lib/index.mjs\");\n\n\nconst { message } = _bundled_es_modules_statuses__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\nfunction normalizeResponseInit(init = {}) {\n  const status = init?.status || 200;\n  const statusText = init?.statusText || message[status] || \"\";\n  const headers = new Headers(init?.headers);\n  return {\n    ...init,\n    headers,\n    status,\n    statusText\n  };\n}\nfunction decorateResponse(response, init) {\n  if (init.type) {\n    Object.defineProperty(response, \"type\", {\n      value: init.type,\n      enumerable: true,\n      writable: false\n    });\n  }\n  if (typeof document !== \"undefined\") {\n    const responseCookies = headers_polyfill__WEBPACK_IMPORTED_MODULE_1__.Headers.prototype.getSetCookie.call(\n      init.headers\n    );\n    for (const cookieString of responseCookies) {\n      document.cookie = cookieString;\n    }\n  }\n  return response;\n}\n\n//# sourceMappingURL=decorators.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/HttpResponse/decorators.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/executeHandlers.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/executeHandlers.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   executeHandlers: () => (/* binding */ executeHandlers)\n/* harmony export */ });\nconst executeHandlers = async ({\n  request,\n  requestId,\n  handlers,\n  resolutionContext\n}) => {\n  let matchingHandler = null;\n  let result = null;\n  for (const handler of handlers) {\n    result = await handler.run({ request, requestId, resolutionContext });\n    if (result !== null) {\n      matchingHandler = handler;\n    }\n    if (result?.response) {\n      break;\n    }\n  }\n  if (matchingHandler) {\n    return {\n      handler: matchingHandler,\n      parsedResult: result?.parsedResult,\n      response: result?.response\n    };\n  }\n  return null;\n};\n\n//# sourceMappingURL=executeHandlers.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/executeHandlers.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/handleRequest.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/handleRequest.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleRequest: () => (/* binding */ handleRequest)\n/* harmony export */ });\n/* harmony import */ var _open_draft_until__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @open-draft/until */ \"./node_modules/@open-draft/until/lib/index.mjs\");\n/* harmony import */ var _executeHandlers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./executeHandlers.mjs */ \"./node_modules/msw/lib/core/utils/executeHandlers.mjs\");\n/* harmony import */ var _request_onUnhandledRequest_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./request/onUnhandledRequest.mjs */ \"./node_modules/msw/lib/core/utils/request/onUnhandledRequest.mjs\");\n/* harmony import */ var _request_readResponseCookies_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./request/readResponseCookies.mjs */ \"./node_modules/msw/lib/core/utils/request/readResponseCookies.mjs\");\n\n\n\n\nasync function handleRequest(request, requestId, handlers, options, emitter, handleRequestOptions) {\n  emitter.emit(\"request:start\", { request, requestId });\n  if (request.headers.get(\"x-msw-intention\") === \"bypass\") {\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  const lookupResult = await (0,_open_draft_until__WEBPACK_IMPORTED_MODULE_0__.until)(() => {\n    return (0,_executeHandlers_mjs__WEBPACK_IMPORTED_MODULE_1__.executeHandlers)({\n      request,\n      requestId,\n      handlers,\n      resolutionContext: handleRequestOptions?.resolutionContext\n    });\n  });\n  if (lookupResult.error) {\n    emitter.emit(\"unhandledException\", {\n      error: lookupResult.error,\n      request,\n      requestId\n    });\n    throw lookupResult.error;\n  }\n  if (!lookupResult.data) {\n    await (0,_request_onUnhandledRequest_mjs__WEBPACK_IMPORTED_MODULE_2__.onUnhandledRequest)(request, options.onUnhandledRequest);\n    emitter.emit(\"request:unhandled\", { request, requestId });\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  const { response } = lookupResult.data;\n  if (!response) {\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  if (response.status === 302 && response.headers.get(\"x-msw-intention\") === \"passthrough\") {\n    emitter.emit(\"request:end\", { request, requestId });\n    handleRequestOptions?.onPassthroughResponse?.(request);\n    return;\n  }\n  (0,_request_readResponseCookies_mjs__WEBPACK_IMPORTED_MODULE_3__.readResponseCookies)(request, response);\n  emitter.emit(\"request:match\", { request, requestId });\n  const requiredLookupResult = lookupResult.data;\n  const transformedResponse = handleRequestOptions?.transformResponse?.(response) || response;\n  handleRequestOptions?.onMockedResponse?.(\n    transformedResponse,\n    requiredLookupResult\n  );\n  emitter.emit(\"request:end\", { request, requestId });\n  return transformedResponse;\n}\n\n//# sourceMappingURL=handleRequest.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/handleRequest.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/internal/Disposable.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/Disposable.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Disposable: () => (/* binding */ Disposable)\n/* harmony export */ });\nclass Disposable {\n  subscriptions = [];\n  async dispose() {\n    await Promise.all(this.subscriptions.map((subscription) => subscription()));\n  }\n}\n\n//# sourceMappingURL=Disposable.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/internal/Disposable.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/internal/devUtils.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/devUtils.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   devUtils: () => (/* binding */ devUtils)\n/* harmony export */ });\n/* harmony import */ var outvariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! outvariant */ \"./node_modules/outvariant/lib/index.mjs\");\n\nconst LIBRARY_PREFIX = \"[MSW]\";\nfunction formatMessage(message, ...positionals) {\n  const interpolatedMessage = (0,outvariant__WEBPACK_IMPORTED_MODULE_0__.format)(message, ...positionals);\n  return `${LIBRARY_PREFIX} ${interpolatedMessage}`;\n}\nfunction warn(message, ...positionals) {\n  console.warn(formatMessage(message, ...positionals));\n}\nfunction error(message, ...positionals) {\n  console.error(formatMessage(message, ...positionals));\n}\nconst devUtils = {\n  formatMessage,\n  warn,\n  error\n};\n\n//# sourceMappingURL=devUtils.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/internal/devUtils.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/internal/getCallFrame.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/getCallFrame.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCallFrame: () => (/* binding */ getCallFrame)\n/* harmony export */ });\nconst SOURCE_FRAME = /[\\/\\\\]msw[\\/\\\\]src[\\/\\\\](.+)/;\nconst BUILD_FRAME = /(node_modules)?[\\/\\\\]lib[\\/\\\\](core|browser|node|native|iife)[\\/\\\\]|^[^\\/\\\\]*$/;\nfunction getCallFrame(error) {\n  const stack = error.stack;\n  if (!stack) {\n    return;\n  }\n  const frames = stack.split(\"\\n\").slice(1);\n  const declarationFrame = frames.find((frame) => {\n    return !(SOURCE_FRAME.test(frame) || BUILD_FRAME.test(frame));\n  });\n  if (!declarationFrame) {\n    return;\n  }\n  const declarationPath = declarationFrame.replace(/\\s*at [^()]*\\(([^)]+)\\)/, \"$1\").replace(/^@/, \"\");\n  return declarationPath;\n}\n\n//# sourceMappingURL=getCallFrame.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/internal/getCallFrame.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/internal/isIterable.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/isIterable.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isIterable: () => (/* binding */ isIterable)\n/* harmony export */ });\nfunction isIterable(fn) {\n  if (!fn) {\n    return false;\n  }\n  return typeof fn[Symbol.iterator] == \"function\";\n}\n\n//# sourceMappingURL=isIterable.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/internal/isIterable.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/internal/isObject.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/isObject.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isObject: () => (/* binding */ isObject)\n/* harmony export */ });\nfunction isObject(value) {\n  return value != null && typeof value === \"object\" && !Array.isArray(value);\n}\n\n//# sourceMappingURL=isObject.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/internal/isObject.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/internal/isStringEqual.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/isStringEqual.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isStringEqual: () => (/* binding */ isStringEqual)\n/* harmony export */ });\nfunction isStringEqual(actual, expected) {\n  return actual.toLowerCase() === expected.toLowerCase();\n}\n\n//# sourceMappingURL=isStringEqual.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/internal/isStringEqual.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/internal/mergeRight.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/mergeRight.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeRight: () => (/* binding */ mergeRight)\n/* harmony export */ });\n/* harmony import */ var _isObject_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isObject.mjs */ \"./node_modules/msw/lib/core/utils/internal/isObject.mjs\");\n\nfunction mergeRight(left, right) {\n  return Object.entries(right).reduce(\n    (result, [key, rightValue]) => {\n      const leftValue = result[key];\n      if (Array.isArray(leftValue) && Array.isArray(rightValue)) {\n        result[key] = leftValue.concat(rightValue);\n        return result;\n      }\n      if ((0,_isObject_mjs__WEBPACK_IMPORTED_MODULE_0__.isObject)(leftValue) && (0,_isObject_mjs__WEBPACK_IMPORTED_MODULE_0__.isObject)(rightValue)) {\n        result[key] = mergeRight(leftValue, rightValue);\n        return result;\n      }\n      result[key] = rightValue;\n      return result;\n    },\n    Object.assign({}, left)\n  );\n}\n\n//# sourceMappingURL=mergeRight.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/internal/mergeRight.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/internal/pipeEvents.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/pipeEvents.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pipeEvents: () => (/* binding */ pipeEvents)\n/* harmony export */ });\nfunction pipeEvents(source, destination) {\n  const rawEmit = source.emit;\n  if (rawEmit._isPiped) {\n    return;\n  }\n  const sourceEmit = function sourceEmit2(event, ...data) {\n    destination.emit(event, ...data);\n    return rawEmit.call(this, event, ...data);\n  };\n  sourceEmit._isPiped = true;\n  source.emit = sourceEmit;\n}\n\n//# sourceMappingURL=pipeEvents.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/internal/pipeEvents.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/internal/toReadonlyArray.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/internal/toReadonlyArray.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toReadonlyArray: () => (/* binding */ toReadonlyArray)\n/* harmony export */ });\nfunction toReadonlyArray(source) {\n  const clone = [...source];\n  Object.freeze(clone);\n  return clone;\n}\n\n//# sourceMappingURL=toReadonlyArray.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/internal/toReadonlyArray.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/logging/getStatusCodeColor.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/logging/getStatusCodeColor.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StatusCodeColor: () => (/* binding */ StatusCodeColor),\n/* harmony export */   getStatusCodeColor: () => (/* binding */ getStatusCodeColor)\n/* harmony export */ });\nvar StatusCodeColor = /* @__PURE__ */ ((StatusCodeColor2) => {\n  StatusCodeColor2[\"Success\"] = \"#69AB32\";\n  StatusCodeColor2[\"Warning\"] = \"#F0BB4B\";\n  StatusCodeColor2[\"Danger\"] = \"#E95F5D\";\n  return StatusCodeColor2;\n})(StatusCodeColor || {});\nfunction getStatusCodeColor(status) {\n  if (status < 300) {\n    return \"#69AB32\" /* Success */;\n  }\n  if (status < 400) {\n    return \"#F0BB4B\" /* Warning */;\n  }\n  return \"#E95F5D\" /* Danger */;\n}\n\n//# sourceMappingURL=getStatusCodeColor.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/logging/getStatusCodeColor.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/logging/getTimestamp.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/logging/getTimestamp.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTimestamp: () => (/* binding */ getTimestamp)\n/* harmony export */ });\nfunction getTimestamp() {\n  const now = /* @__PURE__ */ new Date();\n  return [now.getHours(), now.getMinutes(), now.getSeconds()].map(String).map((chunk) => chunk.slice(0, 2)).map((chunk) => chunk.padStart(2, \"0\")).join(\":\");\n}\n\n//# sourceMappingURL=getTimestamp.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/logging/getTimestamp.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/logging/serializeRequest.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/logging/serializeRequest.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serializeRequest: () => (/* binding */ serializeRequest)\n/* harmony export */ });\nasync function serializeRequest(request) {\n  const requestClone = request.clone();\n  const requestText = await requestClone.text();\n  return {\n    url: new URL(request.url),\n    method: request.method,\n    headers: Object.fromEntries(request.headers.entries()),\n    body: requestText\n  };\n}\n\n//# sourceMappingURL=serializeRequest.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/logging/serializeRequest.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/logging/serializeResponse.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/logging/serializeResponse.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serializeResponse: () => (/* binding */ serializeResponse)\n/* harmony export */ });\n/* harmony import */ var _bundled_es_modules_statuses__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bundled-es-modules/statuses */ \"./node_modules/@bundled-es-modules/statuses/index-esm.js\");\n\nconst { message } = _bundled_es_modules_statuses__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\nasync function serializeResponse(response) {\n  const responseClone = response.clone();\n  const responseText = await responseClone.text();\n  const responseStatus = responseClone.status || 200;\n  const responseStatusText = responseClone.statusText || message[responseStatus] || \"OK\";\n  return {\n    status: responseStatus,\n    statusText: responseStatusText,\n    headers: Object.fromEntries(responseClone.headers.entries()),\n    body: responseText\n  };\n}\n\n//# sourceMappingURL=serializeResponse.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/logging/serializeResponse.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/matching/matchRequestUrl.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/matching/matchRequestUrl.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coercePath: () => (/* binding */ coercePath),\n/* harmony export */   matchRequestUrl: () => (/* binding */ matchRequestUrl)\n/* harmony export */ });\n/* harmony import */ var path_to_regexp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path-to-regexp */ \"./node_modules/msw/node_modules/path-to-regexp/dist.es2015/index.js\");\n/* harmony import */ var _mswjs_interceptors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mswjs/interceptors */ \"./node_modules/@mswjs/interceptors/lib/browser/index.mjs\");\n/* harmony import */ var _normalizePath_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./normalizePath.mjs */ \"./node_modules/msw/lib/core/utils/matching/normalizePath.mjs\");\n\n\n\nfunction coercePath(path) {\n  return path.replace(\n    /([:a-zA-Z_-]*)(\\*{1,2})+/g,\n    (_, parameterName, wildcard) => {\n      const expression = \"(.*)\";\n      if (!parameterName) {\n        return expression;\n      }\n      return parameterName.startsWith(\":\") ? `${parameterName}${wildcard}` : `${parameterName}${expression}`;\n    }\n  ).replace(/([^\\/])(:)(?=\\d+)/, \"$1\\\\$2\").replace(/^([^\\/]+)(:)(?=\\/\\/)/, \"$1\\\\$2\");\n}\nfunction matchRequestUrl(url, path, baseUrl) {\n  const normalizedPath = (0,_normalizePath_mjs__WEBPACK_IMPORTED_MODULE_1__.normalizePath)(path, baseUrl);\n  const cleanPath = typeof normalizedPath === \"string\" ? coercePath(normalizedPath) : normalizedPath;\n  const cleanUrl = (0,_mswjs_interceptors__WEBPACK_IMPORTED_MODULE_0__.getCleanUrl)(url);\n  const result = (0,path_to_regexp__WEBPACK_IMPORTED_MODULE_2__.match)(cleanPath, { decode: decodeURIComponent })(cleanUrl);\n  const params = result && result.params || {};\n  return {\n    matches: result !== false,\n    params\n  };\n}\n\n//# sourceMappingURL=matchRequestUrl.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/matching/matchRequestUrl.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/matching/normalizePath.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/matching/normalizePath.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizePath: () => (/* binding */ normalizePath)\n/* harmony export */ });\n/* harmony import */ var _url_cleanUrl_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../url/cleanUrl.mjs */ \"./node_modules/msw/lib/core/utils/url/cleanUrl.mjs\");\n/* harmony import */ var _url_getAbsoluteUrl_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../url/getAbsoluteUrl.mjs */ \"./node_modules/msw/lib/core/utils/url/getAbsoluteUrl.mjs\");\n\n\nfunction normalizePath(path, baseUrl) {\n  if (path instanceof RegExp) {\n    return path;\n  }\n  const maybeAbsoluteUrl = (0,_url_getAbsoluteUrl_mjs__WEBPACK_IMPORTED_MODULE_0__.getAbsoluteUrl)(path, baseUrl);\n  return (0,_url_cleanUrl_mjs__WEBPACK_IMPORTED_MODULE_1__.cleanUrl)(maybeAbsoluteUrl);\n}\n\n//# sourceMappingURL=normalizePath.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/matching/normalizePath.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/request/getRequestCookies.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/request/getRequestCookies.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAllRequestCookies: () => (/* binding */ getAllRequestCookies),\n/* harmony export */   getRequestCookies: () => (/* binding */ getRequestCookies)\n/* harmony export */ });\n/* harmony import */ var _bundled_es_modules_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bundled-es-modules/cookie */ \"./node_modules/@bundled-es-modules/cookie/index-esm.js\");\n/* harmony import */ var _mswjs_cookies__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mswjs/cookies */ \"./node_modules/@mswjs/cookies/lib/index.mjs\");\n\n\nfunction getAllDocumentCookies() {\n  return _bundled_es_modules_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].parse(document.cookie);\n}\nfunction getRequestCookies(request) {\n  if (typeof document === \"undefined\" || typeof location === \"undefined\") {\n    return {};\n  }\n  switch (request.credentials) {\n    case \"same-origin\": {\n      const url = new URL(request.url);\n      return location.origin === url.origin ? getAllDocumentCookies() : {};\n    }\n    case \"include\": {\n      return getAllDocumentCookies();\n    }\n    default: {\n      return {};\n    }\n  }\n}\nfunction getAllRequestCookies(request) {\n  const requestCookiesString = request.headers.get(\"cookie\");\n  const cookiesFromHeaders = requestCookiesString ? _bundled_es_modules_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].parse(requestCookiesString) : {};\n  _mswjs_cookies__WEBPACK_IMPORTED_MODULE_1__.store.hydrate();\n  const cookiesFromStore = Array.from(_mswjs_cookies__WEBPACK_IMPORTED_MODULE_1__.store.get(request)?.entries()).reduce((cookies, [name, { value }]) => {\n    return Object.assign(cookies, { [name.trim()]: value });\n  }, {});\n  const cookiesFromDocument = getRequestCookies(request);\n  const forwardedCookies = {\n    ...cookiesFromDocument,\n    ...cookiesFromStore\n  };\n  for (const [name, value] of Object.entries(forwardedCookies)) {\n    request.headers.append(\"cookie\", _bundled_es_modules_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].serialize(name, value));\n  }\n  return {\n    ...forwardedCookies,\n    ...cookiesFromHeaders\n  };\n}\n\n//# sourceMappingURL=getRequestCookies.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/request/getRequestCookies.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/request/onUnhandledRequest.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/request/onUnhandledRequest.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onUnhandledRequest: () => (/* binding */ onUnhandledRequest)\n/* harmony export */ });\n/* harmony import */ var _toPublicUrl_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toPublicUrl.mjs */ \"./node_modules/msw/lib/core/utils/request/toPublicUrl.mjs\");\n/* harmony import */ var _internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/devUtils.mjs */ \"./node_modules/msw/lib/core/utils/internal/devUtils.mjs\");\n\n\nasync function onUnhandledRequest(request, strategy = \"warn\") {\n  const url = new URL(request.url);\n  const publicUrl = (0,_toPublicUrl_mjs__WEBPACK_IMPORTED_MODULE_0__.toPublicUrl)(url);\n  const unhandledRequestMessage = `intercepted a request without a matching request handler:\n\n  \\u2022 ${request.method} ${publicUrl}\n\nIf you still wish to intercept this unhandled request, please create a request handler for it.\nRead more: https://mswjs.io/docs/getting-started/mocks`;\n  function applyStrategy(strategy2) {\n    switch (strategy2) {\n      case \"error\": {\n        _internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.devUtils.error(\"Error: %s\", unhandledRequestMessage);\n        throw new Error(\n          _internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.devUtils.formatMessage(\n            'Cannot bypass a request when using the \"error\" strategy for the \"onUnhandledRequest\" option.'\n          )\n        );\n      }\n      case \"warn\": {\n        _internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.devUtils.warn(\"Warning: %s\", unhandledRequestMessage);\n        break;\n      }\n      case \"bypass\":\n        break;\n      default:\n        throw new Error(\n          _internal_devUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.devUtils.formatMessage(\n            'Failed to react to an unhandled request: unknown strategy \"%s\". Please provide one of the supported strategies (\"bypass\", \"warn\", \"error\") or a custom callback function as the value of the \"onUnhandledRequest\" option.',\n            strategy2\n          )\n        );\n    }\n  }\n  if (typeof strategy === \"function\") {\n    strategy(request, {\n      warning: applyStrategy.bind(null, \"warn\"),\n      error: applyStrategy.bind(null, \"error\")\n    });\n    return;\n  }\n  if (url.protocol === \"file:\") {\n    return;\n  }\n  applyStrategy(strategy);\n}\n\n//# sourceMappingURL=onUnhandledRequest.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/request/onUnhandledRequest.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/request/readResponseCookies.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/request/readResponseCookies.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   readResponseCookies: () => (/* binding */ readResponseCookies)\n/* harmony export */ });\n/* harmony import */ var _mswjs_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mswjs/cookies */ \"./node_modules/@mswjs/cookies/lib/index.mjs\");\n\nfunction readResponseCookies(request, response) {\n  _mswjs_cookies__WEBPACK_IMPORTED_MODULE_0__.store.add({ ...request, url: request.url.toString() }, response);\n  _mswjs_cookies__WEBPACK_IMPORTED_MODULE_0__.store.persist();\n}\n\n//# sourceMappingURL=readResponseCookies.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/request/readResponseCookies.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/request/toPublicUrl.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/request/toPublicUrl.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toPublicUrl: () => (/* binding */ toPublicUrl)\n/* harmony export */ });\nfunction toPublicUrl(url) {\n  if (typeof location === \"undefined\") {\n    return url.toString();\n  }\n  const urlInstance = url instanceof URL ? url : new URL(url);\n  return urlInstance.origin === location.origin ? urlInstance.pathname : urlInstance.origin + urlInstance.pathname;\n}\n\n//# sourceMappingURL=toPublicUrl.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/request/toPublicUrl.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/toResponseInit.mjs":
/*!************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/toResponseInit.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toResponseInit: () => (/* binding */ toResponseInit)\n/* harmony export */ });\nfunction toResponseInit(response) {\n  return {\n    status: response.status,\n    statusText: response.statusText,\n    headers: Object.fromEntries(response.headers.entries())\n  };\n}\n\n//# sourceMappingURL=toResponseInit.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/toResponseInit.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/url/cleanUrl.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/url/cleanUrl.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanUrl: () => (/* binding */ cleanUrl),\n/* harmony export */   getSearchParams: () => (/* binding */ getSearchParams)\n/* harmony export */ });\nconst REDUNDANT_CHARACTERS_EXP = /[\\?|#].*$/g;\nfunction getSearchParams(path) {\n  return new URL(`/${path}`, \"http://localhost\").searchParams;\n}\nfunction cleanUrl(path) {\n  return path.replace(REDUNDANT_CHARACTERS_EXP, \"\");\n}\n\n//# sourceMappingURL=cleanUrl.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/url/cleanUrl.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/url/getAbsoluteUrl.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/url/getAbsoluteUrl.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAbsoluteUrl: () => (/* binding */ getAbsoluteUrl)\n/* harmony export */ });\n/* harmony import */ var _isAbsoluteUrl_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isAbsoluteUrl.mjs */ \"./node_modules/msw/lib/core/utils/url/isAbsoluteUrl.mjs\");\n\nfunction getAbsoluteUrl(path, baseUrl) {\n  if ((0,_isAbsoluteUrl_mjs__WEBPACK_IMPORTED_MODULE_0__.isAbsoluteUrl)(path)) {\n    return path;\n  }\n  if (path.startsWith(\"*\")) {\n    return path;\n  }\n  const origin = baseUrl || typeof document !== \"undefined\" && document.baseURI;\n  return origin ? (\n    // Encode and decode the path to preserve escaped characters.\n    decodeURI(new URL(encodeURI(path), origin).href)\n  ) : path;\n}\n\n//# sourceMappingURL=getAbsoluteUrl.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/url/getAbsoluteUrl.mjs?");

/***/ }),

/***/ "./node_modules/msw/lib/core/utils/url/isAbsoluteUrl.mjs":
/*!***************************************************************!*\
  !*** ./node_modules/msw/lib/core/utils/url/isAbsoluteUrl.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAbsoluteUrl: () => (/* binding */ isAbsoluteUrl)\n/* harmony export */ });\nfunction isAbsoluteUrl(url) {\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n}\n\n//# sourceMappingURL=isAbsoluteUrl.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/msw/lib/core/utils/url/isAbsoluteUrl.mjs?");

/***/ }),

/***/ "./node_modules/outvariant/lib/index.mjs":
/*!***********************************************!*\
  !*** ./node_modules/outvariant/lib/index.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InvariantError: () => (/* binding */ InvariantError),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   invariant: () => (/* binding */ invariant)\n/* harmony export */ });\n// src/format.ts\nvar POSITIONALS_EXP = /(%?)(%([sdijo]))/g;\nfunction serializePositional(positional, flag) {\n  switch (flag) {\n    case \"s\":\n      return positional;\n    case \"d\":\n    case \"i\":\n      return Number(positional);\n    case \"j\":\n      return JSON.stringify(positional);\n    case \"o\": {\n      if (typeof positional === \"string\") {\n        return positional;\n      }\n      const json = JSON.stringify(positional);\n      if (json === \"{}\" || json === \"[]\" || /^\\[object .+?\\]$/.test(json)) {\n        return positional;\n      }\n      return json;\n    }\n  }\n}\nfunction format(message, ...positionals) {\n  if (positionals.length === 0) {\n    return message;\n  }\n  let positionalIndex = 0;\n  let formattedMessage = message.replace(\n    POSITIONALS_EXP,\n    (match, isEscaped, _, flag) => {\n      const positional = positionals[positionalIndex];\n      const value = serializePositional(positional, flag);\n      if (!isEscaped) {\n        positionalIndex++;\n        return value;\n      }\n      return match;\n    }\n  );\n  if (positionalIndex < positionals.length) {\n    formattedMessage += ` ${positionals.slice(positionalIndex).join(\" \")}`;\n  }\n  formattedMessage = formattedMessage.replace(/%{2,2}/g, \"%\");\n  return formattedMessage;\n}\n\n// src/invariant.ts\nvar STACK_FRAMES_TO_IGNORE = 2;\nfunction cleanErrorStack(error) {\n  if (!error.stack) {\n    return;\n  }\n  const nextStack = error.stack.split(\"\\n\");\n  nextStack.splice(1, STACK_FRAMES_TO_IGNORE);\n  error.stack = nextStack.join(\"\\n\");\n}\nvar InvariantError = class extends Error {\n  constructor(message, ...positionals) {\n    super(message);\n    this.message = message;\n    this.name = \"Invariant Violation\";\n    this.message = format(message, ...positionals);\n    cleanErrorStack(this);\n  }\n};\nvar invariant = (predicate, message, ...positionals) => {\n  if (!predicate) {\n    throw new InvariantError(message, ...positionals);\n  }\n};\ninvariant.as = (ErrorConstructor, predicate, message, ...positionals) => {\n  if (!predicate) {\n    const formatMessage = positionals.length === 0 ? message : format(message, positionals);\n    let error;\n    try {\n      error = Reflect.construct(ErrorConstructor, [formatMessage]);\n    } catch (err) {\n      error = ErrorConstructor(formatMessage);\n    }\n    throw error;\n  }\n};\n\n//# sourceMappingURL=index.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/outvariant/lib/index.mjs?");

/***/ }),

/***/ "./node_modules/strict-event-emitter/lib/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/strict-event-emitter/lib/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Emitter: () => (/* binding */ Emitter),\n/* harmony export */   MemoryLeakError: () => (/* binding */ MemoryLeakError)\n/* harmony export */ });\n// src/MemoryLeakError.ts\nvar MemoryLeakError = class extends Error {\n  constructor(emitter, type, count) {\n    super(\n      `Possible EventEmitter memory leak detected. ${count} ${type.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`\n    );\n    this.emitter = emitter;\n    this.type = type;\n    this.count = count;\n    this.name = \"MaxListenersExceededWarning\";\n  }\n};\n\n// src/Emitter.ts\nvar _Emitter = class {\n  static listenerCount(emitter, eventName) {\n    return emitter.listenerCount(eventName);\n  }\n  constructor() {\n    this.events = /* @__PURE__ */ new Map();\n    this.maxListeners = _Emitter.defaultMaxListeners;\n    this.hasWarnedAboutPotentialMemoryLeak = false;\n  }\n  _emitInternalEvent(internalEventName, eventName, listener) {\n    this.emit(\n      internalEventName,\n      ...[eventName, listener]\n    );\n  }\n  _getListeners(eventName) {\n    return Array.prototype.concat.apply([], this.events.get(eventName)) || [];\n  }\n  _removeListener(listeners, listener) {\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n    return [];\n  }\n  _wrapOnceListener(eventName, listener) {\n    const onceListener = (...data) => {\n      this.removeListener(eventName, onceListener);\n      return listener.apply(this, data);\n    };\n    Object.defineProperty(onceListener, \"name\", { value: listener.name });\n    return onceListener;\n  }\n  setMaxListeners(maxListeners) {\n    this.maxListeners = maxListeners;\n    return this;\n  }\n  /**\n   * Returns the current max listener value for the `Emitter` which is\n   * either set by `emitter.setMaxListeners(n)` or defaults to\n   * `Emitter.defaultMaxListeners`.\n   */\n  getMaxListeners() {\n    return this.maxListeners;\n  }\n  /**\n   * Returns an array listing the events for which the emitter has registered listeners.\n   * The values in the array will be strings or Symbols.\n   */\n  eventNames() {\n    return Array.from(this.events.keys());\n  }\n  /**\n   * Synchronously calls each of the listeners registered for the event named `eventName`,\n   * in the order they were registered, passing the supplied arguments to each.\n   * Returns `true` if the event has listeners, `false` otherwise.\n   *\n   * @example\n   * const emitter = new Emitter<{ hello: [string] }>()\n   * emitter.emit('hello', 'John')\n   */\n  emit(eventName, ...data) {\n    const listeners = this._getListeners(eventName);\n    listeners.forEach((listener) => {\n      listener.apply(this, data);\n    });\n    return listeners.length > 0;\n  }\n  addListener(eventName, listener) {\n    this._emitInternalEvent(\"newListener\", eventName, listener);\n    const nextListeners = this._getListeners(eventName).concat(listener);\n    this.events.set(eventName, nextListeners);\n    if (this.maxListeners > 0 && this.listenerCount(eventName) > this.maxListeners && !this.hasWarnedAboutPotentialMemoryLeak) {\n      this.hasWarnedAboutPotentialMemoryLeak = true;\n      const memoryLeakWarning = new MemoryLeakError(\n        this,\n        eventName,\n        this.listenerCount(eventName)\n      );\n      console.warn(memoryLeakWarning);\n    }\n    return this;\n  }\n  on(eventName, listener) {\n    return this.addListener(eventName, listener);\n  }\n  once(eventName, listener) {\n    return this.addListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  prependListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      const nextListeners = [listener].concat(listeners);\n      this.events.set(eventName, nextListeners);\n    } else {\n      this.events.set(eventName, listeners.concat(listener));\n    }\n    return this;\n  }\n  prependOnceListener(eventName, listener) {\n    return this.prependListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    );\n  }\n  removeListener(eventName, listener) {\n    const listeners = this._getListeners(eventName);\n    if (listeners.length > 0) {\n      this._removeListener(listeners, listener);\n      this.events.set(eventName, listeners);\n      this._emitInternalEvent(\"removeListener\", eventName, listener);\n    }\n    return this;\n  }\n  /**\n   * Alias for `emitter.removeListener()`.\n   *\n   * @example\n   * emitter.off('hello', listener)\n   */\n  off(eventName, listener) {\n    return this.removeListener(eventName, listener);\n  }\n  removeAllListeners(eventName) {\n    if (eventName) {\n      this.events.delete(eventName);\n    } else {\n      this.events.clear();\n    }\n    return this;\n  }\n  /**\n   * Returns a copy of the array of listeners for the event named `eventName`.\n   */\n  listeners(eventName) {\n    return Array.from(this._getListeners(eventName));\n  }\n  /**\n   * Returns the number of listeners listening to the event named `eventName`.\n   */\n  listenerCount(eventName) {\n    return this._getListeners(eventName).length;\n  }\n  rawListeners(eventName) {\n    return this.listeners(eventName);\n  }\n};\nvar Emitter = _Emitter;\nEmitter.defaultMaxListeners = 10;\n\n//# sourceMappingURL=index.mjs.map\n\n//# sourceURL=webpack://sample-app/./node_modules/strict-event-emitter/lib/index.mjs?");

/***/ })

}]);